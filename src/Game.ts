import { Ctx, Game } from "boardgame.io";
import { INVALID_MOVE } from "boardgame.io/core";

export type P_ID = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7";

export type CellID = number;

export interface GameState {
  players: { id: P_ID; name: string }[];
  alliances: { [key in P_ID]: P_ID[] };
  cells: (ObjInstance | null)[];
  places: (Stronghold | null)[];
  inSupply: { [key in P_ID]: CellID[] };
  moveRecords: { [key in P_ID]: [CellID, CellID][] }; //(stCId,edCId)
  attackRecords: { [key in P_ID]: [CellID, ObjInstance | "Arsenal"] | null };
  forcedRetreat: { [key in P_ID]: [CellID | null, CellID | null] }; //the start and end of retreat CId,
  controlArea: {
    control: P_ID;
    "0": number;
    "1": number;
    "2": number;
    "3": number;
    "4": number;
    "5": number;
    "6": number;
    "7": number;
  }[]; //control player, reldef of players
}
export function dualPlayerID(id: P_ID) {
  switch (id) {
    case "0":
      return "1";
    case "1":
      return "2";
    case "2":
      return "3";
    case "3":
      return "4";
    case "4":
      return "5";
    case "5":
      return "6";
    case "6":
      return "7";
    case "7":
      return "0";
  }
}
export const aiConfig = {
  enumerate: (G: GameState, ctx: Ctx) => {
    let evts = [{ event: "endTurn", args: [] }];
    const CIdLst = Array.from(Array(BoardSize.mx * BoardSize.my).keys());
    let atks = CIdLst.filter((id) => canAttack(G, ctx, id)[0]).map((id) => {
      return { move: "attack", args: [id] };
    });
    let moves = CIdLst.filter((stCId) => canPick(G, ctx, stCId)).flatMap(
      (stCId) => {
        //simply predict supply line after move
        const cPlayer = ctx.currentPlayer as P_ID;
        const newG: GameState = {
          ...G,
          cells: G.cells.map((obj, CId) => (CId === stCId ? null : obj)),
        };
        const suppPred = getSuppliedCells(newG, cPlayer);
        const dirSuppPred = getDirSuppliedLines(newG, cPlayer)[0];
        //move to dir supplied or close friendly units.
        return CIdLst.filter(
          (edCId) =>
            canPut(G, ctx, stCId, edCId) &&
            (dirSuppPred.includes(edCId) || ptSetDisLessThan(suppPred, edCId))
        ).map((edCId) => {
          return { move: "movePiece", args: [stCId, edCId] };
        });
      }
    );
    let result = [];
    if (moves.length > 0) {
      result = moves;
    } else if (atks.length > 0) {
      result = atks;
    } else {
      result = evts;
    }
    return result;
  },
  playoutDepth: 50,
  iterations: 10000,
  objectScores: (G: GameState, ctx: Ctx, playerID: string) => {
    const cPlayer = playerID as P_ID;
    /* if (G.moveRecords[cPlayer].length >= 5) {
      console.log('noMoreChoose')
      return { noMoreChoose: { weight: 1, checker: () => true } }
    } */

    console.log("check objectives");
    const opPlayer = dualPlayerID(cPlayer);
    const cControlArea = totalControlArea(G, cPlayer);
    const dirSuppliedNum = getDirSuppliedLines(G, cPlayer)[0].length;
    const cStronghold = totalStrongHold(G, cPlayer);
    const opStronghold = totalStrongHold(G, opPlayer);
    const cRelDef = totalRelDef(G, cPlayer);
    const opRelDef = totalRelDef(G, opPlayer);
    return {
      stillInSupply: {
        weight: 100,
        checker: (G: any, ctx: Ctx) => {
          return !checkNoSupply(G, ctx.currentPlayer as P_ID);
        },
      },
      moreControlArea: {
        weight: 10,
        checker: (G: any, ctx: Ctx) => {
          console.log("? more area than" + cControlArea);
          return totalControlArea(G, cPlayer) - cControlArea;
        },
      },
      moreDirSupply: {
        weight: 50,
        checker: (G: any, ctx: Ctx) => {
          return getDirSuppliedLines(G, cPlayer)[0].length - dirSuppliedNum;
        },
      },
      moreMyStronghold: {
        weight: 20,
        checker: (G: any, ctx: Ctx) => {
          return totalStrongHold(G, cPlayer) - cStronghold;
        },
      },
      moreMyDef: {
        weight: 50,
        checker: (G: any, ctx: Ctx) => {
          return totalRelDef(G, cPlayer) - cRelDef;
        },
      },
      lessOpStronghold: {
        weight: 50,
        checker: (G: any, ctx: Ctx) => {
          return opStronghold - totalStrongHold(G, opPlayer);
        },
      },
      lessOpDef: {
        weight: 40,
        checker: (G: any, ctx: Ctx) => {
          return opRelDef - totalRelDef(G, opPlayer);
        },
      },
    };
  },
};

export const Kriegspiel: Game<GameState> = {
  name: "kriegspiel",
  setup: (ctx) => {
    return loadGame(turns[turns.length - 1], ctx);
  },
  turn: {
    onBegin(G, ctx) {
      const cPlayer = ctx.currentPlayer as P_ID;
      G.moveRecords[cPlayer] = [];
      G.attackRecords[cPlayer] = null;
      const retreatSt = G.forcedRetreat[cPlayer][0];
      //if nowhere to retreat or out of supply
      if (
        retreatSt !== null &&
        (moveRange(G, retreatSt, 1).length === 0 ||
          !G.cells[retreatSt]?.supplied)
      ) {
        //then be captured
        G.cells[retreatSt] = null;
        G.forcedRetreat[cPlayer] = [null, null];
      }
      update(G, ctx);
    },
    onEnd(G, ctx) {
      const cPlayer = ctx.currentPlayer as P_ID;
      const retreatEd = G.forcedRetreat[cPlayer][1];
      //retreating target
      if (retreatEd !== null) {
        const retreatObj = G.cells[retreatEd];
        if (retreatObj) {
          //end retreating
          retreatObj.retreating = false;
          G.forcedRetreat[cPlayer] = [null, null];
        }
      }
      update(G, ctx);
    },
    stages: {
      edition: {
        moves: {
          load: (G, ctx, fen: string) => {
            return loadGame(fen, ctx);
          },
          merge: (G, ctx, fen: string) => {
            const addCells = loadPieces(fen);
            const newCells = G.cells.map((obj, id) =>
              addCells[id] ? addCells[id] : obj
            );
            G.cells = newCells;
            update(G, ctx);
          },
          editCells: (G, ctx, CId: CellID, element: ObjInstance | null) => {
            G.cells[CId] = element;
            update(G, ctx);
          },
          editPlaces: (G, ctx, CId: CellID, element: Stronghold | null) => {
            G.places[CId] = element;
            update(G, ctx);
          },
        },
      },
    },
  },

  moves: {
    movePiece: (G, ctx, stCId: CellID, edCId: CellID) => {
      const obj = G.cells[stCId];
      const cPlayer = ctx.currentPlayer as P_ID;

      if (obj && canPick(G, ctx, stCId) && canPut(G, ctx, stCId, edCId)) {
        G.cells[stCId] = null;
        //default make it un supplied
        obj.supplied = false;
        G.cells[edCId] = obj;
        //record move
        G.moveRecords[cPlayer].push([stCId, edCId]);

        const retreatSt = G.forcedRetreat[cPlayer][0];
        //if this is a retreat
        if (retreatSt !== null) {
          G.forcedRetreat[cPlayer] = [null, edCId];
        }

        update(G, ctx);
      } else return INVALID_MOVE;
    },
    attack: (G, ctx, CId: CellID) => {
      const cPlayer = ctx.currentPlayer as P_ID;
      const obj = G.cells[CId];
      const [canAtk, relOff] = canAttack(G, ctx, CId);
      if (obj && canAtk) {
        G.attackRecords[cPlayer] = [CId, obj];
        //force retreat
        if (relOff === 1) {
          obj.retreating = true;
          G.forcedRetreat[obj.belong] = [CId, null];
        }
        //capture
        else {
          G.cells[CId] = null;
        }
        update(G, ctx);
      } else return INVALID_MOVE;
    },
  },

  endIf: (G, ctx) => {
    const cPlayer = ctx.currentPlayer as P_ID;
    const arsenals = filterCId(
      G.places,
      (str) => str.placeType === "Arsenal" && str.belong === cPlayer
    );
    if (G.places.filter((str) => str).length !== 0 && arsenals.length === 0) {
      return { winner: dualPlayerID(cPlayer), loser: cPlayer };
    }
  },

  ai: aiConfig,
};

//ai help functions
function totalStrongHold(G: GameState, pId: P_ID) {
  //total strongHold with weight
  // 'Arsenal' | 'Fortress'| 'Pass' | 'Mountain';
  return G.places
    .filter((str) => str && str.belong === pId)
    .reduce((sum, str) => {
      let add = 0;
      switch (str?.placeType) {
        case "Arsenal":
          add = 20;
          break;
        case "Fortress":
          add = 4;
          break;
        case "Pass":
          add = 2;
          break;
      }
      return sum + add;
    }, 0);
}

function totalControlArea(G: GameState, pId: P_ID) {
  return G.controlArea.filter((area) => area.control === pId).length;
}

function checkNoSupply(G: GameState, pId: P_ID) {
  return G.cells.some(
    (obj) =>
      obj && obj.belong === pId && !obj.supplied && obj.objType !== "Relay"
  );
}

function totalRelDef(G: GameState, pId: P_ID) {
  //total RelDef of all pieces, with weight
  //'Infantry' | 'Cavalry' | 'Artillery' | 'Swift_Artillery' | 'Relay' | 'Swift_Relay';
  return filterCId(G.cells, (obj) => obj && obj.belong === pId).reduce(
    (sum, CId) => {
      let w = 1;
      const relDef = G.controlArea[CId][pId];
      const obj = G.cells[CId];
      switch (obj?.typeName) {
        case "Infantry":
          w = 1;
          break;
        case "Cavalry":
          w = 2;
          break;
        case "Artillery":
          w = 1.5;
          break;
        case "Swift_Artillery":
          w = 1.8;
          break;
        case "Relay":
          w = 1.2;
          break;
        case "Swift_Relay":
          w = 1.5;
          break;
      }
      return sum + w * relDef;
    },
    0
  );
}

//data save and load board use FEN
//date like "üíÇ‚Äç‚ôÇÔ∏è.0/üé™.0|8|"

function board2FEN<T>(
  board: (T | null)[],
  encode: (t: T, id: CellID) => string
): string {
  let result: string[] = [];
  let emptyCells = 0;
  board.forEach((obj, id) => {
    if (obj === null) {
      emptyCells = emptyCells + 1;
    } else {
      if (emptyCells > 0) {
        result.push(emptyCells.toString());
        emptyCells = 0;
      }
      result.push(encode(obj, id));
    }
  });
  return "|" + result.join("|") + "|";
}
function FEN2board<T>(
  fen: string,
  decode: (str: string) => T | null
): (T | null)[] {
  let data: string[] = fen.split("|");
  let result = Array(BoardSize.mx * BoardSize.my).fill(null);
  let pointer = 0;
  data.forEach((str) => {
    if (isNaN(Number(str))) {
      result[pointer] = decode(str);
      pointer = pointer + 1;
    } else {
      pointer = pointer + Number(str);
    }
  });
  return result;
}

export function exportGame(G: GameState): string {
  const mixedBoard = G.cells.map((obj, id) => {
    const strong = G.places[id];
    return obj
      ? strong
        ? ([obj, strong] as [ObjInstance, Stronghold])
        : obj
      : strong
      ? strong
      : null;
  });
  return board2FEN(mixedBoard, (element) => {
    if (Array.isArray(element)) {
      const [obj, str] = element;
      return (
        obj.objRender +
        "." +
        obj.belong +
        "/" +
        str.placeRender +
        (str.belong ? "." + str.belong : "")
      );
    } else if ((element as ObjInstance).objRender) {
      const obj = element as ObjInstance;
      return obj.objRender + "." + obj.belong;
    } else {
      const str = element as Stronghold;
      return str.placeRender + (str.belong ? "." + str.belong : "");
    }
  });
}

export function loadPieces(fen: string) {
  return FEN2board(fen, (str) => {
    //üíÇ‚Äç‚ôÇÔ∏è.0/üé™.0
    const data = str.split("/")[0];
    return data ? decodeObj(data) : null;
  });
}
function loadPlaces(fen: string) {
  return FEN2board(fen, (str) => {
    //üíÇ‚Äç‚ôÇÔ∏è.0/üé™.0
    const dLst = str.split("/");
    const data = dLst[dLst.length - 1];
    return data ? decodeStrong(data) : null;
  });
}

export function loadGame(fen: string, ctx: Ctx): GameState {
  const deCells = loadPieces(fen);
  const dePlaces = loadPlaces(fen);
  let myGame: GameState = {
    players: [
      { id: "0", name: "Count Guibert" },
      { id: "1", name: "Umbrella Corps" },
      { id: "2", name: "Southern Snowcones" },
      { id: "3", name: "Ragnar the Fearless" },
      { id: "4", name: "The Rabble" },
      { id: "5", name: "The Eyeballs" },
      { id: "6", name: "Michiel de Ruyter" },
      { id: "7", name: "House of Haltwhistle" },
    ],
    alliances: {
      "0": ["2", "5", "3"],
      "1": ["3"],
      "2": ["0", "4", "7"],
      "3": ["1", "5", "0"],
      "4": ["2", "5"],
      "5": ["4", "0", "3"],
      "6": ["7"],
      "7": ["2", "6"],
    },
    cells: deCells,
    places: dePlaces,
    inSupply: {
      "0": Array(BoardSize.mx * BoardSize.my).fill(false),
      "1": Array(BoardSize.mx * BoardSize.my).fill(false),
      "2": Array(BoardSize.mx * BoardSize.my).fill(false),
      "3": Array(BoardSize.mx * BoardSize.my).fill(false),
      "4": Array(BoardSize.mx * BoardSize.my).fill(false),
      "5": Array(BoardSize.mx * BoardSize.my).fill(false),
      "6": Array(BoardSize.mx * BoardSize.my).fill(false),
      "7": Array(BoardSize.mx * BoardSize.my).fill(false),
    },
    moveRecords: {
      0: [
        [955, 1004],
        [1005, 1007],
        [1508, 1610],
      ],
      1: [
        [1769, 1820],
        [1969, 1918],
        [1920, 1868],
        [1871, 1969],
        [1567, 1618],
      ],
      2: [],
      3: [
        [1171, 1173],
        [1182, 1181],
        [1284, 1182],
        [1435, 1333],
        [933, 835],
      ],
      4: [
        [454, 455],
        [304, 353],
        [257, 355],
        [258, 257],
        [268, 217],
      ],
      5: [
        [288, 338],
        [238, 288],
        [188, 238],
        [229, 281],
        [237, 287],
      ],
      6: [
        [710, 659],
        [514, 512],
      ],
      7: [
        [681, 732],
        [594, 694],
        [544, 644],
        [527, 478],
      ],
    },
    attackRecords: {
      0: null,
      1: null,
      2: null,
      3: [
        685,
        {
          belong: "7",
          canAddDef: false,
          defense: 1,
          objRender: "üö©",
          objType: "Relay",
          offense: 0,
          range: 0,
          retreating: false,
          speed: 1,
          supplied: true,
          typeName: "Relay",
        },
      ],
      4: null,
      5: null,
      6: null,
      7: null,
    },
    forcedRetreat: {
      0: [null, null],
      1: [null, null],
      2: [null, null],
      3: [null, null],
      4: [null, null],
      5: [null, null],
      6: [null, null],
      7: [null, null],
    },
    controlArea: Array((BoardSize.mx * BoardSize.my) / 2)
      .fill({ control: "0", "0": 0, "1": 0 })
      .concat(
        Array((BoardSize.mx * BoardSize.my) / 2).fill({
          control: "1",
          "0": 0,
          "1": 0,
        })
      ),
  };
  update(myGame, ctx);
  return myGame;
}
//üíÇ‚Äç‚ôÇÔ∏è.0->newPiece
function decodeObj(s: string): ObjInstance | null {
  const [t, b] = s.split(".");
  if (t && b) {
    const be = b as P_ID;
    switch (t) {
      case "üíÇ":
        return newPiece("Infantry", be);
      case "üèá":
        return newPiece("Cavalry", be);
      case "üê∫":
        return newPiece("Cavalry_Wolf", be);
      case "üéâ":
        return newPiece("Artillery", be);
      case "üöÄ":
        return newPiece("Swift_Artillery", be);
      case "üö©":
        return newPiece("Relay", be);
      case "üöö":
        return newPiece("Swift_Relay", be);

      default:
        return null;
    }
  } else return null;
}

function decodeStrong(s: string): Stronghold | null {
  const [t, b] = s.split(".");
  if (t) {
    const be = b ? (b as P_ID) : null;
    switch (t) {
      case "üé™":
        return newStronghold("Arsenal", be);
      case "üè∞":
        return newStronghold("Fortress", be);
      case "üõ£Ô∏è":
        return newStronghold("Pass", be);
      case "‚õ∞Ô∏è":
        return newStronghold("Mountain", be);
      default:
        return null;
    }
  } else return null;
}
export const onlyMap =
  "|32|üè∞|6|üé™.0|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|19|üé™.0|1|‚õ∞Ô∏è|24|‚õ∞Ô∏è|24|üõ£Ô∏è|24|‚õ∞Ô∏è|24|‚õ∞Ô∏è|10|üè∞|13|‚õ∞Ô∏è|2|üè∞|76|üè∞|12|üè∞|32|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|24|üõ£Ô∏è|6|üè∞|17|‚õ∞Ô∏è|24|‚õ∞Ô∏è|24|‚õ∞Ô∏è|36|üé™.1|19|üé™.1|";

export const turns: string[] = [
  "|15|üé™.0|42|üè∞|18|üèá.3|2|üö©.3|6|üöÄ.3|2|üé™.3|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üèá.3|11|üíÇ.3|üíÇ.3|12|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|15|üöö.3|üèá.3|üé™.3|3|üéâ.3|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|üíÇ.3|19|‚õ∞Ô∏è|16|üèá.3|4|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|4|üíÇ.3|üíÇ.3|14|üöö.0|4|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|13|‚õ∞Ô∏è|5|üèá.0|üèá.0|1|üíÇ.0|üíÇ.0|üéâ.0|üíÇ.0|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|9|üè∞|3|‚õ∞Ô∏è|6|üèá.0|üèá.0|üíÇ.0|üöÄ.0|üíÇ.0|üíÇ.0|üíÇ.0|‚õ∞Ô∏è|11|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|10|üíÇ.0|3|‚õ∞Ô∏è|2|üè∞|17|‚õ∞Ô∏è|13|‚õ∞Ô∏è|‚õ∞Ô∏è|49|‚õ∞Ô∏è|18|üíÇ.1|üíÇ.1|üíÇ.1|üéâ.1|üèá.1|24|üèá.2|20|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|üèá.1|15|üö©.2|6|üèá.2|üèá.2|üèá.2|üöö.2|6|üè∞|12|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|15|üíÇ.2|üíÇ.2|üíÇ.2|4|üöÄ.2|20|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|13|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|20|üé™.1|9|üöÄ.1/üõ£Ô∏è.1|6|üö©.1/üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|14|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|9|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|47|üöö.5|15|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|48|‚õ∞Ô∏è|28|üíÇ.5|üíÇ.5|üíÇ.5|18|‚õ∞Ô∏è|9|üé™.4|üíÇ.4|üèá.4|8|üè∞|1|üèá.5|üèá.5|üèá.5|üèá.5|üíÇ.5|üíÇ.5|1|üé™.5|3|üíÇ.5|üíÇ.5|1|üö©.5|6|üöö.4|1|üöÄ.4|3|üõ£Ô∏è|2|üéâ.4|5|üíÇ.4|üíÇ.4|üíÇ.4|üèá.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|üöÄ.5|5|üíÇ.5|üíÇ.5|10|üèá.4|üèá.4|2|‚õ∞Ô∏è|10|üíÇ.4|12|üé™.5|2|‚õ∞Ô∏è|22|‚õ∞Ô∏è|26|‚õ∞Ô∏è|19|üé™.4|48|üíÇ.4|üíÇ.4|üíÇ.4|üíÇ.4|68|üè∞|18|üè∞|17|üè∞|28|‚õ∞Ô∏è|38|üöö.7|1|üíÇ.7|3|üö©.7|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üèá.7|9|üè∞|24|üíÇ.7|üíÇ.7|üíÇ.7|2|üíÇ.7|üíÇ.7|1|üöÄ.7|6|üèá.7|17|üö©.6|4|üöö.6|3|üíÇ.6|üíÇ.6|6|üíÇ.7|üíÇ.7|13|üèá.7|10|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üèá.6|üèá.6|8|üöÄ.6|üíÇ.6|6|üíÇ.7|3|üéâ.7|1|üé™.7|8|üèá.7|6|‚õ∞Ô∏è|üíÇ.6|üíÇ.6|üíÇ.6|5|üèá.6|üèá.6|10|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|1|üéâ.6|27|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|42|üè∞|18|üèá.3|2|üö©.3|6|üöÄ.3|2|üé™.3|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üèá.3|12|üíÇ.3|12|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|15|üöö.3|üèá.3|üé™.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.3|üíÇ.3|üíÇ.3|19|‚õ∞Ô∏è|16|üèá.3|4|‚õ∞Ô∏è|üéâ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|üíÇ.3|3|üíÇ.3|üíÇ.3|14|üöö.0|4|üõ£Ô∏è|üíÇ.0|19|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|üíÇ.3|12|‚õ∞Ô∏è|8|üíÇ.0|üíÇ.0|üéâ.0|üíÇ.0|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.3|8|üè∞|3|‚õ∞Ô∏è|8|üíÇ.0|üöÄ.0|üíÇ.0|üíÇ.0|üíÇ.0|‚õ∞Ô∏è|11|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|7|üèá.0|üèá.0|1|üíÇ.0|3|‚õ∞Ô∏è|2|üè∞|17|‚õ∞Ô∏è|10|üèá.2|2|‚õ∞Ô∏è|‚õ∞Ô∏è|6|üèá.0|üèá.0|36|üèá.2|üèá.2|3|‚õ∞Ô∏è|18|üíÇ.1|üíÇ.1|üíÇ.1|üéâ.1|üèá.1|20|üöÄ.2|üèá.2|23|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|üèá.1|15|üö©.2|9|üöö.2|6|üè∞|12|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|15|üíÇ.2|üíÇ.2|üíÇ.2|25|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|13|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|20|üé™.1|9|üöÄ.1/üõ£Ô∏è.1|6|üö©.1/üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|14|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|9|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|47|üöö.5|15|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|48|‚õ∞Ô∏è|28|üíÇ.5|üíÇ.5|üíÇ.5|18|‚õ∞Ô∏è|9|üé™.4|üíÇ.4|9|üèá.5/üè∞|3|üèá.5|1|üíÇ.5|üíÇ.5|1|üé™.5|3|üíÇ.5|üíÇ.5|1|üö©.5|6|üöö.4|1|üöÄ.4|3|üõ£Ô∏è|3|üéâ.4|5|üíÇ.4|üíÇ.4|üèá.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|2|üöÄ.5|3|üíÇ.5|1|üíÇ.5|9|üèá.4|üèá.4|2|‚õ∞Ô∏è|9|üíÇ.4|üíÇ.4|üèá.4|11|üèá.5/üé™.5|1|üèá.5|‚õ∞Ô∏è|22|‚õ∞Ô∏è|26|‚õ∞Ô∏è|19|üé™.4|48|üíÇ.4|üíÇ.4|üíÇ.4|üíÇ.4|68|üè∞|18|üèá.7/üè∞|17|üè∞|28|‚õ∞Ô∏è|2|üèá.7|37|üíÇ.7|3|üö©.7|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üè∞|25|üíÇ.7|3|üíÇ.7|üíÇ.7|1|üöÄ.7|22|üèá.6|1|üö©.6|4|üöö.6|3|üíÇ.6|üíÇ.6|5|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|2|üöö.7|9|üèá.7|7|üíÇ.6|üíÇ.6|üíÇ.6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üèá.6|üèá.6|8|üöÄ.6|üíÇ.6|6|üíÇ.7|3|üéâ.7|1|üé™.7|8|üèá.7|6|‚õ∞Ô∏è|1|üéâ.6|7|üèá.6|10|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|42|üè∞|18|üèá.3|2|üö©.3|6|üöÄ.3|2|üé™.3|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üèá.3|12|üíÇ.3|12|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|17|üöö.3/üé™.3|üèá.3|3|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|üíÇ.3|19|‚õ∞Ô∏è|16|üèá.3|4|‚õ∞Ô∏è|üéâ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|3|üíÇ.3|üíÇ.3|üíÇ.3|14|üöö.0|3|üíÇ.0|üõ£Ô∏è|üíÇ.0|19|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|üíÇ.3|üíÇ.3|11|‚õ∞Ô∏è|8|üíÇ.0|üíÇ.0|üéâ.0|1|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|6|üèá.2|üè∞|3|‚õ∞Ô∏è|8|üíÇ.0|üöÄ.0|üíÇ.0|üíÇ.0|üíÇ.0|‚õ∞Ô∏è|11|üè∞|8|‚õ∞Ô∏è|4|üè∞|4|üèá.2|3|‚õ∞Ô∏è|10|üíÇ.0|3|‚õ∞Ô∏è|2|üè∞|17|‚õ∞Ô∏è|8|üöÄ.2|üèá.2|3|‚õ∞Ô∏è|‚õ∞Ô∏è|44|üèá.2|4|‚õ∞Ô∏è|7|üèá.0|1|üèá.0|8|üíÇ.1|üíÇ.1|üíÇ.1|üéâ.1|üèá.1|35|üèá.0|üèá.0|8|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|üèá.1|15|üö©.2|7|üöö.2|8|üè∞|12|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|15|üíÇ.2|üíÇ.2|üíÇ.2|25|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|13|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|20|üé™.1|9|üöÄ.1/üõ£Ô∏è.1|6|üö©.1/üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|14|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|9|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|63|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|22|üöö.5|25|‚õ∞Ô∏è|28|üíÇ.5|üíÇ.5|19|‚õ∞Ô∏è|9|üé™.4|1|üíÇ.4|8|üèá.5/üè∞|3|üèá.5|1|üíÇ.5|2|üé™.5|1|üíÇ.5|1|üíÇ.5|üíÇ.5|1|üö©.5|6|üöö.4|5|üõ£Ô∏è|4|üéâ.4|4|üíÇ.4|üíÇ.4|üèá.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|6|üíÇ.5|13|‚õ∞Ô∏è|9|üíÇ.4|üíÇ.4|üèá.4|11|üèá.5/üé™.5|1|üèá.5|‚õ∞Ô∏è|4|üöÄ.5|2|üíÇ.5|12|üöÄ.4|1|‚õ∞Ô∏è|26|‚õ∞Ô∏è|19|üé™.4|üèá.4|üèá.4|46|üíÇ.4|üíÇ.4|üíÇ.4|üíÇ.4|68|üè∞|18|üèá.7/üè∞|17|üè∞|28|‚õ∞Ô∏è|2|üèá.7|37|üíÇ.7|3|üö©.7|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üè∞|25|üíÇ.7|3|üíÇ.7|üíÇ.7|1|üöÄ.7|22|üèá.6|1|üö©.6|4|üöö.6|3|üíÇ.6|üíÇ.6|5|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|2|üöö.7|9|üèá.7|7|üíÇ.6|üíÇ.6|üíÇ.6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üèá.6|üèá.6|8|üöÄ.6|üíÇ.6|6|üíÇ.7|3|üéâ.7|1|üé™.7|8|üèá.7|6|‚õ∞Ô∏è|1|üéâ.6|7|üèá.6|10|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|42|üè∞|16|üèá.3|4|üö©.3|9|üé™.3|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|16|üöö.3|üèá.3|7|üöÄ.3|üíÇ.3|12|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|üíÇ.3|19|‚õ∞Ô∏è|16|üèá.3|1|üèá.3|2|‚õ∞Ô∏è|üéâ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|4|üíÇ.3|üíÇ.3|18|üíÇ.0|üõ£Ô∏è|üíÇ.0|19|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|üíÇ.3|üíÇ.3|3|üèá.2|7|‚õ∞Ô∏è|8|üíÇ.0|üíÇ.0|üéâ.0|1|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|3|üöÄ.2|1|üèá.2|1|üè∞|3|‚õ∞Ô∏è|7|üöö.0|üíÇ.0|üöÄ.0|üíÇ.0|1|üíÇ.0|‚õ∞Ô∏è|11|üè∞|8|‚õ∞Ô∏è|4|üè∞|4|üèá.2|3|‚õ∞Ô∏è|10|üíÇ.0|1|üíÇ.0|1|‚õ∞Ô∏è|2|üè∞|17|‚õ∞Ô∏è|10|üèá.2|2|‚õ∞Ô∏è|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üèá.0|8|üíÇ.1|üíÇ.1|üíÇ.1|üéâ.1|üèá.1|45|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|üèá.1|15|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|1|üèá.0|10|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|15|üíÇ.2|üíÇ.2|19|üèá.0|üèá.0|5|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|13|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|20|üé™.1|9|üöÄ.1/üõ£Ô∏è.1|6|üö©.1/üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|14|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|9|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|63|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|22|üöö.5|5|üíÇ.5|üíÇ.5|18|‚õ∞Ô∏è|33|üíÇ.5|1|üö©.5|13|‚õ∞Ô∏è|9|üé™.4|10|üèá.5/üè∞|3|üèá.5|1|üíÇ.5|2|üé™.5|1|üíÇ.5|2|üíÇ.5|8|üöö.4|5|üõ£Ô∏è|5|üéâ.4|3|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|6|üíÇ.5|13|‚õ∞Ô∏è|9|üíÇ.4|üíÇ.4|12|üèá.5/üé™.5|1|üèá.5|‚õ∞Ô∏è|4|üöÄ.5|2|üíÇ.5|14|‚õ∞Ô∏è|12|üèá.4|13|‚õ∞Ô∏è|18|üöÄ.4|üé™.4|üèá.4|üèá.4|12|üèá.4|33|üíÇ.4|üíÇ.4|üíÇ.4|üíÇ.4|68|üè∞|18|üè∞|17|üè∞|28|‚õ∞Ô∏è|2|üèá.7|38|üíÇ.7|3|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|2|üèá.7|7|üè∞|25|üíÇ.7|3|üíÇ.7|üíÇ.7|1|üö©.7|22|üèá.6|1|üö©.6|4|üöö.6|3|üíÇ.6|üíÇ.6|5|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|üöö.7|2|üöÄ.7|8|üèá.7|7|üíÇ.6|üíÇ.6|üíÇ.6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üèá.6|üèá.6|8|üöÄ.6|üíÇ.6|6|üíÇ.7|3|üéâ.7|1|üé™.7|8|üèá.7|6|‚õ∞Ô∏è|1|üéâ.6|7|üèá.6|10|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|42|üè∞|16|üèá.3|4|üö©.3|9|üé™.3|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|16|üöö.3|üèá.3|8|üíÇ.3|12|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöÄ.3|1|üíÇ.3|üèá.2|18|‚õ∞Ô∏è|16|üèá.3|1|üèá.3|2|‚õ∞Ô∏è|üéâ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|3|üíÇ.3|1|üíÇ.3|üèá.2|17|üíÇ.0|üõ£Ô∏è|üíÇ.0|19|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|4|üíÇ.3|2|üèá.2|5|‚õ∞Ô∏è|8|üíÇ.0|üíÇ.0|üéâ.0|1|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|üíÇ.3|üíÇ.3|5|üèá.2/üè∞|3|‚õ∞Ô∏è|7|üöö.0|üíÇ.0|üöÄ.0|3|‚õ∞Ô∏è|11|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|11|üíÇ.0|üíÇ.0|üíÇ.0|‚õ∞Ô∏è|2|üè∞|17|‚õ∞Ô∏è|13|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|7|üéâ.1|28|‚õ∞Ô∏è|9|üèá.0|7|üíÇ.1|1|üíÇ.1|üíÇ.1|1|üèá.1|44|üíÇ.1|1|üíÇ.1|üíÇ.1|üèá.1|16|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|1|üèá.0|10|üíÇ.1|üíÇ.1|üíÇ.1|16|üíÇ.2|1|üíÇ.2|18|üèá.0|6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|3|üèá.1|9|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|üíÇ.2|20|üèá.0|9|üöÄ.1/üõ£Ô∏è.1|3|üèá.1|2|üö©.1/üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|14|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|9|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|63|üè∞|11|‚õ∞Ô∏è|10|üè∞|16|üíÇ.5|1|üíÇ.5|13|üè∞|4|‚õ∞Ô∏è|22|üöö.5|8|üíÇ.5|1|üö©.5|14|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üèá.5/üè∞|3|üèá.5|1|üíÇ.5|2|üé™.5|4|üíÇ.5|8|üöö.4|5|üõ£Ô∏è|5|üéâ.4|3|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|4|üíÇ.5|13|‚õ∞Ô∏è|9|üíÇ.4|üíÇ.4|12|üèá.5/üé™.5|1|üèá.5|‚õ∞Ô∏è|4|üöÄ.5|2|üíÇ.5|14|‚õ∞Ô∏è|26|‚õ∞Ô∏è|18|üöÄ.4|üé™.4|48|üíÇ.4|üíÇ.4|üíÇ.4|12|üèá.4|36|üèá.4|üèá.4|üíÇ.4|9|üèá.4|7|üè∞|18|üè∞|17|üè∞|28|‚õ∞Ô∏è|2|üèá.7|32|üíÇ.7|5|üíÇ.7|3|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|2|üèá.7|7|üè∞|25|üöö.7|3|üíÇ.7|üíÇ.7|1|üö©.7|17|üíÇ.6|4|üèá.6|1|üö©.6|üèá.6|üèá.6|6|üíÇ.6|üíÇ.6|4|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|5|üöÄ.7|6|üèá.7|7|üíÇ.6|üíÇ.6|üéâ.6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üèá.6|9|üöÄ.6|üíÇ.6|10|üéâ.7|1|üé™.7|8|üèá.7|6|‚õ∞Ô∏è|17|üöö.6|2|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|42|üè∞|14|üèá.3|6|üö©.3|9|üèá.2|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|16|üöö.3|üèá.3|7|üöÄ.3|üíÇ.3|üèá.2|11|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.3|1|üíÇ.3|1|üèá.2|17|‚õ∞Ô∏è|16|üèá.3|1|üèá.3|2|‚õ∞Ô∏è|üéâ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|4|üíÇ.3|3|üèá.2|16|üõ£Ô∏è|üíÇ.0|19|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|4|üíÇ.3|8|‚õ∞Ô∏è|8|üíÇ.0|üíÇ.0|üéâ.0|üíÇ.0|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|üíÇ.3|üíÇ.3|5|üè∞|3|‚õ∞Ô∏è|7|üöö.0|üíÇ.0|üöÄ.0|3|‚õ∞Ô∏è|11|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|11|üíÇ.0|üíÇ.0|1|‚õ∞Ô∏è|2|üè∞|17|‚õ∞Ô∏è|13|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üíÇ.0|2|üíÇ.1|2|üéâ.1|29|‚õ∞Ô∏è|9|üèá.0|3|üíÇ.0|3|üíÇ.1|1|üíÇ.1|üíÇ.1|1|üèá.1|46|üíÇ.1|üíÇ.1|üèá.1|16|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|1|üèá.0|10|üíÇ.1|üíÇ.1|üíÇ.1|16|üíÇ.2|1|üíÇ.2|20|üèá.0|4|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|7|üíÇ.2|üíÇ.2|1|üíÇ.2|üíÇ.2|22|üèá.0|7|üöÄ.1/üõ£Ô∏è.1|3|üèá.1|2|üèá.1/üè∞|7|üíÇ.2|üíÇ.2|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|14|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|9|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|54|üíÇ.5|8|üè∞|11|‚õ∞Ô∏è|10|üè∞|18|üíÇ.5|üíÇ.5|üö©.5|11|üè∞|4|‚õ∞Ô∏è|22|üöö.5|25|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üèá.5/üè∞|3|üèá.5|1|üíÇ.5|üèá.5|1|üé™.5|2|üöÄ.5|1|üíÇ.5|8|üöö.4|5|üõ£Ô∏è|5|üéâ.4|3|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|4|üíÇ.5|13|‚õ∞Ô∏è|9|üíÇ.4|üíÇ.4|12|üèá.5/üé™.5|2|‚õ∞Ô∏è|7|üíÇ.5|14|‚õ∞Ô∏è|26|‚õ∞Ô∏è|18|üöÄ.4|üé™.4|48|üíÇ.4|50|üíÇ.4|üíÇ.4|1|üíÇ.4|9|üèá.4|7|üè∞|18|üè∞|11|üèá.4|üèá.4|4|üè∞|3|üèá.4|9|üíÇ.7|14|‚õ∞Ô∏è|2|üèá.7|38|üíÇ.7|3|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üèá.7|üèá.7|7|üè∞|6|üèá.6|16|üíÇ.7|üíÇ.7|üöö.7|3|üíÇ.7|üíÇ.7|1|üö©.7|1|üöÄ.7|15|üíÇ.6|4|üèá.6|1|üèá.6|6|üöÄ.6|1|üíÇ.6|üíÇ.6|4|üíÇ.7|üíÇ.7|2|üíÇ.7|20|üíÇ.6|üíÇ.6|üéâ.6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|1|üèá.6|8|üíÇ.6|10|üéâ.7|1|üé™.7|8|üèá.7|6|‚õ∞Ô∏è|17|üöö.6|2|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|5|üèá.3|36|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|15|üö©.3|üöö.3|2|üèá.3|5|üöÄ.3|1|üèá.2|üèá.2|üèá.2|üèá.2|8|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.3|1|üíÇ.3|19|‚õ∞Ô∏è|16|üèá.3|3|üèá.3|‚õ∞Ô∏è|üéâ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|3|üíÇ.3|üíÇ.3|18|üíÇ.0|üíÇ.0|üõ£Ô∏è|üíÇ.0|19|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|13|‚õ∞Ô∏è|8|üíÇ.0|1|üéâ.0|1|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|üíÇ.3|üíÇ.3|5|üè∞|3|‚õ∞Ô∏è|7|üöö.0|üíÇ.0|üöÄ.0|3|‚õ∞Ô∏è|11|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|11|üíÇ.0|üíÇ.0|1|‚õ∞Ô∏è|2|üíÇ.1/üè∞.1|17|‚õ∞Ô∏è|13|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üíÇ.0|2|üíÇ.1|1|üéâ.1|30|‚õ∞Ô∏è|7|üèá.0|1|üèá.0|3|üíÇ.0|5|üíÇ.1|üíÇ.1|48|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|12|üíÇ.1|üíÇ.1|üíÇ.1|2|üèá.1|13|üíÇ.2|24|üèá.0|üèá.0|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|2|üèá.1|2|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|3|üèá.1|2|üèá.1/üè∞|6|üíÇ.2|üíÇ.2|üíÇ.2|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|14|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|9|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üíÇ.5|50|üíÇ.5|üíÇ.5|üö©.5|5|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|22|üöö.5|6|üöÄ.5|18|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üèá.5/üè∞|3|üèá.5|1|üíÇ.5|üèá.5|1|üé™.5|4|üíÇ.5|8|üöö.4|5|üõ£Ô∏è|5|üéâ.4|3|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|4|üíÇ.5|13|‚õ∞Ô∏è|9|üíÇ.4|üíÇ.4|12|üèá.5/üé™.5|2|‚õ∞Ô∏è|7|üíÇ.5|14|‚õ∞Ô∏è|26|‚õ∞Ô∏è|18|üöÄ.4|üé™.4|10|üèá.4|37|üíÇ.4|üèá.4|1|üíÇ.4|7|üèá.4|39|üíÇ.4|üíÇ.4|19|üíÇ.7/üè∞.7|18|üè∞|17|üè∞|28|‚õ∞Ô∏è|2|üèá.7|13|üèá.6|18|üíÇ.7|5|üíÇ.7|3|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üèá.7|üèá.7|7|üíÇ.6/üè∞.6|6|üèá.6|8|üíÇ.6|6|üíÇ.7|üíÇ.7|1|üöö.7|üíÇ.7|2|üíÇ.7|üíÇ.7|1|üö©.7|1|üöÄ.7|6|üèá.7|6|üíÇ.6|1|üéâ.6|6|üèá.6|6|üöÄ.6|2|üíÇ.6|4|üíÇ.7|25|üíÇ.6|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|1|üèá.6|8|üíÇ.6|10|üéâ.7|1|üé™.7|15|‚õ∞Ô∏è|17|üöö.6|2|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|5|üèá.3|36|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|15|üö©.3|üöö.3|8|üöÄ.3|üíÇ.3|12|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.3|1|üíÇ.3|1|üèá.2|17|‚õ∞Ô∏è|16|üèá.3|4|‚õ∞Ô∏è|üéâ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|üèá.3|3|üíÇ.3|2|üèá.2|üèá.2|14|üíÇ.0|1|üõ£Ô∏è|üíÇ.0|19|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|13|‚õ∞Ô∏è|8|üíÇ.0|2|üíÇ.0|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|üèá.3|üíÇ.3|üíÇ.3|üíÇ.3|5|üè∞|3|‚õ∞Ô∏è|7|üöö.0|üíÇ.0|2|üöÄ.0|üéâ.0|‚õ∞Ô∏è|11|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|11|üíÇ.0|2|‚õ∞Ô∏è|2|üíÇ.1/üè∞.1|üéâ.1|16|‚õ∞Ô∏è|13|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|1|üíÇ.0|1|üíÇ.1|32|‚õ∞Ô∏è|7|üèá.0|1|üèá.0|3|üíÇ.0|5|üíÇ.1|üíÇ.1|47|üíÇ.1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|13|üíÇ.1|üíÇ.1|16|üíÇ.2|24|üèá.0|üèá.0|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|5|üèá.1|üèá.1/üè∞|7|üíÇ.2|üíÇ.2|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|5|üèá.1|7|üíÇ.2|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|1|üèá.1|7|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|5|üíÇ.5|2|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|45|üöö.5|9|üíÇ.5|üíÇ.5|üö©.5|5|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|29|üöÄ.5|18|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üè∞|3|üèá.5|üíÇ.5|1|üèá.5|1|üé™.5|4|üíÇ.5|8|üöö.4|5|üõ£Ô∏è|5|üéâ.4|3|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|4|üíÇ.5|13|‚õ∞Ô∏è|9|üíÇ.4|üíÇ.4|11|üèá.5|üèá.5/üé™.5|2|‚õ∞Ô∏è|6|üíÇ.5|15|‚õ∞Ô∏è|26|‚õ∞Ô∏è|18|üöÄ.4|üé™.4|7|üèá.4|üèá.4|39|üíÇ.4|üèá.4|39|üê∫.7|8|üíÇ.4|üíÇ.4|2|üèá.6|17|üíÇ.7/üè∞.7|18|üê∫.7/üè∞|13|üèá.6|3|üè∞|24|üöÄ.7|3|‚õ∞Ô∏è|2|üê∫.7|8|üíÇ.6|5|üèá.6|16|üíÇ.7|üíÇ.7|5|üíÇ.7|3|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üê∫.7|8|üè∞|üéâ.6|14|üíÇ.6|6|üíÇ.7|2|üöö.7|üíÇ.7|2|üíÇ.7|üíÇ.7|1|üö©.7|15|üíÇ.6|15|üöÄ.6|2|üíÇ.6|4|üíÇ.7|25|üíÇ.6|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|1|üèá.6|8|üíÇ.6|10|üéâ.7|1|üé™.7|15|‚õ∞Ô∏è|17|üöö.6|2|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|5|üèá.3|7|üöö.3|28|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|15|üö©.3|9|üöÄ.3|üíÇ.3|13|üö©.0|3|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.3|1|üíÇ.3|1|üèá.2|17|‚õ∞Ô∏è|16|üèá.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|üèá.3|3|üíÇ.3|2|üèá.2|üèá.2|14|üíÇ.0|1|üíÇ.0/üõ£Ô∏è.0|üíÇ.0|19|‚õ∞Ô∏è|üéâ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|2|üíÇ.3|10|‚õ∞Ô∏è|8|üíÇ.0|3|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.3|1|üíÇ.3|6|üè∞|3|‚õ∞Ô∏è|7|üöö.0|1|üíÇ.0|1|üöÄ.0|1|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|11|üíÇ.0|1|üéâ.0|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|3|üèá.3|9|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üíÇ.0|üíÇ.0|1|üíÇ.1|32|‚õ∞Ô∏è|7|üèá.0|1|üèá.0|3|üíÇ.0|5|üíÇ.1|üíÇ.1|47|üíÇ.1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|13|üíÇ.1|üíÇ.1|16|üíÇ.2|24|üèá.0|üèá.0|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|6|üèá.1/üè∞|üèá.1|6|üíÇ.2|üíÇ.2|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|7|üèá.1|5|üíÇ.2|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|3|üèá.1|5|üé™.2|2|‚õ∞Ô∏è|6|üé™.2|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|6|üíÇ.5|11|‚õ∞Ô∏è|26|üöö.5|3|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|55|üíÇ.5|üíÇ.5|üö©.5|5|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|29|üöÄ.5|18|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üè∞|4|üíÇ.5|1|üèá.5|1|üé™.5|13|üöö.4|5|üõ£Ô∏è|5|üéâ.4|3|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|2|üíÇ.5|15|‚õ∞Ô∏è|9|üíÇ.4|üíÇ.4|11|üèá.5|üèá.5/üé™.5|üèá.5|1|‚õ∞Ô∏è|7|üíÇ.5|11|üèá.4|2|‚õ∞Ô∏è|26|‚õ∞Ô∏è|7|üê∫.7|10|üíÇ.4|üöÄ.4/üé™.4|4|üèá.6|2|üèá.4|üèá.4|29|üê∫.7|9|üíÇ.4|üíÇ.4|5|üèá.6|33|üê∫.7|30|üíÇ.7/üè∞.7|18|üê∫.7/üè∞|9|üíÇ.6|7|üè∞|15|üöö.7|8|üöÄ.7|3|‚õ∞Ô∏è|11|üéâ.6|5|üèá.6|16|üíÇ.7|üíÇ.7|5|üíÇ.7|3|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üíÇ.6/üè∞.6|15|üíÇ.6|6|üíÇ.7|3|üíÇ.7|2|üíÇ.7|üíÇ.7|1|üö©.7|31|üöÄ.6|2|üíÇ.6|4|üíÇ.7|25|üíÇ.6|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|1|üèá.6|8|üíÇ.6|10|üéâ.7|1|üé™.7|15|‚õ∞Ô∏è|17|üöö.6|2|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|3|üèá.3|9|üöö.3|28|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|15|üö©.3|9|üöÄ.3|14|üö©.0|3|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|üíÇ.3|1|üèá.2|17|‚õ∞Ô∏è|16|üèá.3|3|üéâ.3|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|1|üíÇ.3|2|üèá.2|üèá.2|14|üíÇ.0|1|üíÇ.0/üõ£Ô∏è.0|üíÇ.0|19|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|10|‚õ∞Ô∏è|8|üíÇ.0|3|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.3|1|üíÇ.3|1|üèá.3|4|üè∞|3|‚õ∞Ô∏è|9|üíÇ.0|1|üöÄ.0|1|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|8|üöö.0|4|üéâ.0|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|3|üèá.3|9|‚õ∞Ô∏è|‚õ∞Ô∏è|11|üíÇ.0|1|üíÇ.0|üíÇ.0|1|üíÇ.1|1|üíÇ.1|30|‚õ∞Ô∏è|7|üèá.0|6|üíÇ.0|2|üíÇ.1|2|üíÇ.1|44|üèá.0|2|üíÇ.1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|5|üèá.0|8|üíÇ.1|16|üíÇ.2|24|üèá.0|2|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|6|üè∞|7|üíÇ.2|üíÇ.2|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|7|üèá.1|5|üíÇ.2|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|3|üèá.1|üèá.1|üèá.1|3|üé™.2|2|‚õ∞Ô∏è|6|üíÇ.5|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|26|üöö.5|3|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|55|üíÇ.5|üíÇ.5|6|üè∞|11|‚õ∞Ô∏è|10|üè∞|19|üö©.5|12|üè∞|4|‚õ∞Ô∏è|29|üöÄ.5|18|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üè∞|4|üíÇ.5|1|üèá.5|1|üé™.5|13|üöö.4|5|üõ£Ô∏è|4|üéâ.4|4|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|2|üíÇ.5|14|üèá.4|‚õ∞Ô∏è|4|üèá.4|üèá.4|3|üíÇ.4|üíÇ.4|12|üé™.5|2|‚õ∞Ô∏è|22|‚õ∞Ô∏è|26|‚õ∞Ô∏è|7|üê∫.7|10|üíÇ.4|üé™.4|4|üèá.6|21|üèá.5|üèá.5|üèá.5|8|üê∫.7|üê∫.7|9|üíÇ.4|üíÇ.4|üöÄ.4|4|üèá.6|31|üê∫.7|17|üèá.6|14|üíÇ.7/üè∞.7|18|üè∞|9|üíÇ.6|7|üè∞|15|üíÇ.7|üöö.7|7|üöÄ.7|3|‚õ∞Ô∏è|11|üéâ.6|13|üöÄ.6|üíÇ.6|7|üíÇ.7|6|üíÇ.7|3|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üíÇ.6/üè∞.6|8|üèá.6|13|üíÇ.7|3|üíÇ.7|1|üíÇ.7|1|üíÇ.7|1|üö©.7|29|üöö.6|4|üíÇ.6|4|üíÇ.7|25|üíÇ.6|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|10|üíÇ.6|10|üéâ.7|1|üé™.7|15|‚õ∞Ô∏è|20|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üé™.0|1|üèá.3|11|üöö.3|28|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|15|üö©.3|9|üöÄ.3|14|üö©.0|3|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|1|üéâ.3|2|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|1|üíÇ.3|2|üèá.2|16|üíÇ.0|‚õ∞Ô∏è|üíÇ.0|15|üèá.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|1|üíÇ.3|2|üèá.2|üèá.2|16|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|2|üíÇ.3|1|üíÇ.3|8|‚õ∞Ô∏è|8|üíÇ.0|3|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|1|üèá.3|4|üè∞|3|‚õ∞Ô∏è|9|üíÇ.0|1|üöÄ.0|1|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|8|üöö.0|4|üéâ.0|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|3|üèá.3|9|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|üíÇ.0|üíÇ.0|1|üíÇ.1|üíÇ.1|31|‚õ∞Ô∏è|7|üèá.0|6|üíÇ.0|2|üíÇ.1|2|üíÇ.1|44|üèá.0|2|üíÇ.1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|14|üíÇ.1|16|üíÇ.2|27|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|22|üèá.0|5|üöÄ.1/üõ£Ô∏è.1|6|üè∞|7|üíÇ.2|üíÇ.2|‚õ∞Ô∏è|18|‚õ∞Ô∏è|8|üèá.0|4|‚õ∞Ô∏è|13|üíÇ.2|üéâ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|4|üèá.1|üèá.1|üèá.1|üèá.1|1|üé™.2|2|‚õ∞Ô∏è|6|üíÇ.5|10|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|16|‚õ∞Ô∏è|18|‚õ∞Ô∏è|30|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|47|üöö.5|7|üíÇ.5|üíÇ.5|6|üè∞|11|‚õ∞Ô∏è|10|üè∞|19|üö©.5|12|üè∞|4|‚õ∞Ô∏è|29|üöÄ.5|18|‚õ∞Ô∏è|49|‚õ∞Ô∏è|üèá.4|3|üèá.4|4|üé™.4|10|üè∞|4|üíÇ.5|3|üé™.5|13|üöö.4|5|üõ£Ô∏è|3|üèá.4|5|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|18|‚õ∞Ô∏è|3|üéâ.4|5|üíÇ.4|13|üé™.5|2|‚õ∞Ô∏è|üèá.5|6|üê∫.7|14|‚õ∞Ô∏è|9|üíÇ.4|16|‚õ∞Ô∏è|7|üê∫.7|10|üíÇ.4|üé™.4|2|üèá.6|üèá.6|üèá.6|32|üê∫.7|10|üíÇ.4|üíÇ.4|üöÄ.4|36|üê∫.7|32|üíÇ.7/üè∞.7|7|üèá.5|üèá.5|üèá.5|8|üè∞|9|üíÇ.6|7|üè∞|4|üíÇ.6|9|üíÇ.7|üíÇ.7|üöö.7|3|üíÇ.7|1|üöÄ.7|5|‚õ∞Ô∏è|11|üéâ.6|9|üöö.6|3|üöÄ.6|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üíÇ.6/üè∞.6|8|üèá.6|13|üíÇ.7|3|üíÇ.7|1|üíÇ.7|1|üíÇ.7|1|üö©.7|34|üíÇ.6|4|üíÇ.7|6|üéâ.7|18|üíÇ.6|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|10|üíÇ.6|12|üé™.7|15|‚õ∞Ô∏è|20|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|15|üèá.3|13|üöö.3|28|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|15|üö©.3|7|üöÄ.3|16|üö©.0|3|üé™.0|üíÇ.0|‚õ∞Ô∏è|17|üé™.3|1|üéâ.3|2|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üèá.2|17|‚õ∞Ô∏è|üíÇ.0|15|üèá.3|4|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|üíÇ.3|üíÇ.3|2|üèá.2|üèá.2|16|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|üíÇ.3|1|üíÇ.3|1|üíÇ.3|8|‚õ∞Ô∏è|8|üíÇ.0|üíÇ.0|2|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|2|üèá.3|1|üèá.3|4|üè∞|3|‚õ∞Ô∏è|11|üöÄ.0|1|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|8|üöö.0|4|üéâ.0|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|13|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|üíÇ.0|üíÇ.0|1|üíÇ.1|üíÇ.1|31|‚õ∞Ô∏è|9|üèá.0|4|üíÇ.0|2|üíÇ.1|2|üíÇ.1|44|üèá.0|1|üíÇ.1|1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|14|üíÇ.1|16|üíÇ.2|27|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|6|üè∞|7|üíÇ.2|üíÇ.2|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|13|üíÇ.2|üéâ.2|1|‚õ∞Ô∏è|6|üíÇ.5|11|‚õ∞Ô∏è|9|üèá.0|3|‚õ∞Ô∏è|3|üé™.1|9|üèá.1|2|‚õ∞Ô∏è|17|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|9|üèá.0|2|‚õ∞Ô∏è|12|üèá.1|3|‚õ∞Ô∏è|18|‚õ∞Ô∏è|24|üèá.1|üèá.1|4|üõ£Ô∏è|8|üè∞|18|üè∞|18|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|55|üíÇ.5|üíÇ.5|6|üè∞|11|‚õ∞Ô∏è|10|üè∞|19|üö©.5|12|üè∞|4|‚õ∞Ô∏è|22|üöö.5|25|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üè∞|4|üíÇ.5|3|üöÄ.5/üé™.5|13|üöö.4|5|üõ£Ô∏è|2|üèá.4|6|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|10|üéâ.5|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|18|‚õ∞Ô∏è|2|üèá.4|üéâ.4|5|üíÇ.4|13|üé™.5|2|‚õ∞Ô∏è|7|üê∫.7|14|‚õ∞Ô∏è|2|üèá.4|6|üíÇ.4|16|‚õ∞Ô∏è|7|üê∫.7|10|üíÇ.4|üíÇ.4/üé™.4|28|üèá.5|8|üê∫.7|10|üíÇ.4|2|üèá.6|üèá.6|üèá.6|33|üê∫.7|12|üíÇ.6|19|üíÇ.7/üè∞.7|7|üèá.5|üèá.5|9|üè∞|9|üéâ.6|7|üè∞|4|üíÇ.6|9|üíÇ.7|üíÇ.7|üöö.7|4|üíÇ.7|6|‚õ∞Ô∏è|21|üöö.6|3|üöÄ.6|12|üíÇ.7|2|üíÇ.7|1|üöÄ.7|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üíÇ.6/üè∞.6|8|üèá.6|13|üíÇ.7|5|üíÇ.7|üéâ.7|2|üö©.7|34|üíÇ.6|4|üíÇ.7|25|üíÇ.6|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|10|üíÇ.6|12|üé™.7|15|‚õ∞Ô∏è|20|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|29|üöö.3|28|üè∞|50|üíÇ.0|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üèá.3|11|üö©.3|5|üöÄ.3|18|üö©.0|3|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|1|üéâ.3|2|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üèá.2|17|‚õ∞Ô∏è|üíÇ.0|15|üèá.3|3|üíÇ.3|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|2|üíÇ.3|1|üíÇ.3|2|üèá.2|üèá.2|14|üíÇ.0|1|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|üíÇ.3|üíÇ.3|8|‚õ∞Ô∏è|8|üíÇ.0|3|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|2|üèá.3|1|üèá.3|4|üè∞|3|‚õ∞Ô∏è|11|üöÄ.0|1|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|4|üè∞|8|‚õ∞Ô∏è|8|üöö.0|4|üéâ.0|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|13|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|üíÇ.0|üíÇ.0|1|üíÇ.1|üíÇ.1|31|‚õ∞Ô∏è|14|üíÇ.0|2|üíÇ.1|2|üíÇ.1|44|üèá.0|1|üíÇ.1|1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|6|üöö.2|8|üè∞|5|üèá.0|8|üíÇ.1|16|üíÇ.2|27|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|6|üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|13|üíÇ.2|2|‚õ∞Ô∏è|6|üíÇ.5|11|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|9|üèá.1|2|‚õ∞Ô∏è|17|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|12|üèá.1|3|‚õ∞Ô∏è|18|‚õ∞Ô∏è|11|üèá.0|13|üèá.1|4|üõ£Ô∏è|8|üè∞|18|üè∞|3|üèá.0|11|üèá.1|2|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|55|üíÇ.5|üíÇ.5|6|üè∞|11|‚õ∞Ô∏è|10|üè∞|19|üö©.5|12|üè∞|4|‚õ∞Ô∏è|22|üöö.5|25|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üè∞|4|üíÇ.5|3|üé™.5|13|üöö.4|5|üõ£Ô∏è|9|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|11|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|18|‚õ∞Ô∏è|2|üèá.4|üéâ.4|5|üíÇ.4|13|üé™.5|üéâ.5|1|‚õ∞Ô∏è|üöÄ.5|6|üê∫.7|14|‚õ∞Ô∏è|1|üèá.4|7|üíÇ.4|16|‚õ∞Ô∏è|7|üê∫.7|11|üíÇ.4/üé™.4|üíÇ.4|2|üèá.4|26|üèá.5|6|üê∫.7|10|üíÇ.4|1|üèá.6|28|üèá.5|7|üê∫.7|12|üíÇ.6|üèá.6|7|üöö.6|10|üíÇ.7/üè∞.7|3|üíÇ.7|14|üè∞|9|üéâ.6|5|üèá.6|1|üè∞|4|üíÇ.6|9|üíÇ.7|1|üöö.7|4|üíÇ.7|6|‚õ∞Ô∏è|11|üíÇ.6|13|üöÄ.6|8|üíÇ.7|3|üíÇ.7|2|üíÇ.7|üöÄ.7|2|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üè∞|8|üèá.6|14|üíÇ.7|4|üíÇ.7|1|üéâ.7|1|üö©.7|34|üíÇ.6|30|üíÇ.6|1|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|10|üíÇ.6|12|üé™.7|15|‚õ∞Ô∏è|20|üíÇ.6|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|",
  "|39|üíÇ.5|7|üè∞|11|‚õ∞Ô∏è|10|üè∞|18|üíÇ.5|13|üè∞|4|‚õ∞Ô∏è|22|üöö.5|7|üö©.5|17|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üé™.4|10|üè∞|8|üé™.5|13|üöö.4|5|üõ£Ô∏è|9|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|9|üíÇ.5|1|‚õ∞Ô∏è|1|üíÇ.5|1|üíÇ.5|18|‚õ∞Ô∏è|2|üéâ.4|6|üíÇ.4|13|üé™.5|üéâ.5|1|‚õ∞Ô∏è|üöÄ.5|6|üê∫.7|14|‚õ∞Ô∏è|üèá.4|8|üíÇ.4|14|üèá.5|üèá.5|‚õ∞Ô∏è|7|üê∫.7|11|üé™.4|üíÇ.4|1|üèá.4|46|üíÇ.4|1|üèá.4|47|üèá.6|üíÇ.6|8|üöö.6|üöÄ.6|9|üè∞|4|üíÇ.7|13|üê∫.7/üè∞|9|üéâ.6|üèá.6|4|üèá.6|1|üè∞|4|üíÇ.6|8|üíÇ.7|üíÇ.7|1|üöö.7|2|üíÇ.7|1|üíÇ.7|6|‚õ∞Ô∏è|2|üê∫.7|8|üíÇ.6|22|üíÇ.7|3|üíÇ.7|3|üöÄ.7|2|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üè∞|8|üèá.6|14|üíÇ.7|4|üíÇ.7|1|üéâ.7|1|üö©.7|34|üíÇ.6|32|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|10|üíÇ.6|12|üé™.7|15|‚õ∞Ô∏è|2|üíÇ.6|18|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|19|üíÇ.6|9|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|18|üèá.3|40|üíÇ.0/üè∞.0|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üöö.3|1|üö©.3|5|üöÄ.3|18|üö©.0|3|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|1|üéâ.3|2|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üèá.2|17|‚õ∞Ô∏è|üíÇ.0|15|üèá.3|3|üíÇ.3|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|2|üíÇ.3|1|üíÇ.3|2|üèá.2|üèá.2|12|üíÇ.0|üöÄ.0|üíÇ.0|1|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|1|üíÇ.3|8|‚õ∞Ô∏è|12|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üíÇ.3|4|üè∞|3|‚õ∞Ô∏è|13|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|4|üèá.3/üè∞|8|‚õ∞Ô∏è|8|üöö.0|4|üéâ.0|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|3|üèá.3|9|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|üíÇ.0|üíÇ.0|1|üíÇ.1|üíÇ.1|31|‚õ∞Ô∏è|14|üíÇ.0|1|üíÇ.1|3|üíÇ.1|44|üèá.0|1|üíÇ.1|1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|15|üè∞|14|üíÇ.1|16|üíÇ.2|27|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|22|üèá.0|5|üöÄ.1/üõ£Ô∏è.1|6|üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|13|üíÇ.2|2|‚õ∞Ô∏è|6|üíÇ.5|11|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|7|üèá.1|4|‚õ∞Ô∏è|17|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|10|üèá.1|5|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|üèá.0|9|üèá.1|6|üõ£Ô∏è|8|üè∞|18|üè∞|3|üèá.0|9|üèá.1|4|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|",
  "|47|üè∞|11|‚õ∞Ô∏è|10|üè∞|17|üíÇ.5|14|üè∞|4|‚õ∞Ô∏è|22|üöö.5|6|üíÇ.5|18|‚õ∞Ô∏è|30|üö©.5|18|‚õ∞Ô∏è|9|üé™.4|10|üè∞|8|üé™.5|13|üöö.4|5|üõ£Ô∏è|9|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|9|üíÇ.5|1|‚õ∞Ô∏è|2|üíÇ.5|19|‚õ∞Ô∏è|2|üéâ.4|6|üíÇ.4|13|üé™.5|üéâ.5|1|‚õ∞Ô∏è|üöÄ.5|1|üíÇ.5|4|üê∫.7|11|üíÇ.4|1|üèá.4|‚õ∞Ô∏è|9|üíÇ.4|14|üèá.5|üèá.5|‚õ∞Ô∏è|7|üê∫.7|11|üíÇ.4/üé™.4|üèá.4|48|üèá.4|7|üèá.6|üöÄ.6|40|üèá.6|üíÇ.6|8|üöö.6|10|üè∞|1|üíÇ.7|üíÇ.7|1|üíÇ.7|2|üíÇ.7|10|üê∫.7/üè∞|9|üéâ.6|üèá.6|6|üè∞|4|üíÇ.6|11|üöö.7|1|üíÇ.7|üíÇ.7|8|‚õ∞Ô∏è|2|üê∫.7|8|üíÇ.6|22|üíÇ.7|6|üéâ.7|üöÄ.7|2|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üè∞|8|üèá.6|14|üíÇ.7|4|üíÇ.7|3|üö©.7|34|üíÇ.6|32|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üö©.6|23|üé™.7|15|‚õ∞Ô∏è|19|üíÇ.6|1|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|3|üíÇ.6|25|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|19|üíÇ.6/üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|8|üíÇ.0|9|üèá.3|40|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üöö.3|1|üö©.3|3|üöÄ.3|20|üö©.0|1|üöÄ.0|1|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|1|üéâ.3|2|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üèá.2|17|‚õ∞Ô∏è|üíÇ.0|15|üèá.3|3|üíÇ.3|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|2|üíÇ.3|üíÇ.3|3|üèá.2|üèá.2|12|üíÇ.0|1|üíÇ.0|1|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|3|üíÇ.3|9|‚õ∞Ô∏è|12|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|üíÇ.3|5|üè∞|3|‚õ∞Ô∏è|13|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|4|üèá.3/üè∞|8|‚õ∞Ô∏è|8|üöö.0|4|üéâ.0|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|3|üèá.3|9|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|üíÇ.0|2|üíÇ.1|üíÇ.1|31|‚õ∞Ô∏è|13|üíÇ.0|üíÇ.0|1|üíÇ.1|3|üíÇ.1|42|üèá.0|3|üíÇ.1|1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|15|üè∞|31|üíÇ.2|27|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|üíÇ.1|4|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|22|üèá.0|5|üöÄ.1/üõ£Ô∏è.1|6|üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|13|üíÇ.2|2|‚õ∞Ô∏è|6|üíÇ.5|11|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|5|üèá.1|6|‚õ∞Ô∏è|17|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|8|üèá.1|7|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|üèá.0|7|üèá.1|8|üõ£Ô∏è|8|üè∞|18|üè∞|3|üèá.0|7|üèá.1|6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|",
  "|47|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|28|üíÇ.5|19|‚õ∞Ô∏è|29|üíÇ.5|19|‚õ∞Ô∏è|9|üé™.4|10|üè∞|üöö.5|7|üö©.5/üé™.5|13|üöö.4|5|üõ£Ô∏è|1|üéâ.4|7|üíÇ.4|üíÇ.4|üíÇ.4|2|üö©.4|9|üíÇ.5|1|‚õ∞Ô∏è|2|üíÇ.5|19|‚õ∞Ô∏è|9|üíÇ.4|13|üé™.5|üéâ.5|üöÄ.5|‚õ∞Ô∏è|2|üíÇ.5|4|üê∫.7|12|üèá.4|1|‚õ∞Ô∏è|3|üèá.6|5|üíÇ.4|14|üèá.5|üèá.5|‚õ∞Ô∏è|7|üê∫.7|11|üíÇ.4/üé™.4|üèá.4|48|üíÇ.4|üèá.4|7|üöÄ.6|16|üíÇ.7|1|üíÇ.7|21|üèá.6|üíÇ.6|8|üöö.6|1|üíÇ.6|8|üè∞|1|üíÇ.7|üíÇ.7|2|üíÇ.7|1|üíÇ.7|10|üê∫.7/üè∞|9|üéâ.6|üèá.6|3|üèá.6|2|üè∞|16|üöö.7|3|üéâ.7|7|‚õ∞Ô∏è|2|üê∫.7|8|üíÇ.6|22|üíÇ.7|7|üöÄ.7|2|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üè∞|23|üíÇ.7|4|üíÇ.7|3|üö©.7|24|üö©.6|9|üíÇ.6|32|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|27|üé™.7|15|‚õ∞Ô∏è|19|üíÇ.6|1|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|4|üíÇ.6|14|üíÇ.6/üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üé™.6|23|üõ£Ô∏è|18|‚õ∞Ô∏è|7|üíÇ.0|24|üöÄ.3|24|üöÄ.0|1|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|5|üèá.3|7|üöö.3|1|üö©.3|24|üö©.0|3|üé™.0|1|‚õ∞Ô∏è|17|üé™.3|1|üéâ.3|2|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üèá.2|17|‚õ∞Ô∏è|üíÇ.0|15|üèá.3|3|üíÇ.3|‚õ∞Ô∏è|üíÇ.3/üõ£Ô∏è.3|‚õ∞Ô∏è|2|üíÇ.3|4|üèá.2|13|üíÇ.0|2|üíÇ.0|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|üíÇ.3|9|‚õ∞Ô∏è|12|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|3|üíÇ.3|5|üè∞|3|‚õ∞Ô∏è|13|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|2|üíÇ.3|1|üèá.3/üè∞|8|‚õ∞Ô∏è|8|üöö.0|4|üéâ.0|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|3|üèá.3|9|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|üíÇ.0|2|üíÇ.1|üíÇ.1|31|‚õ∞Ô∏è|13|üíÇ.0|üíÇ.0|1|üíÇ.1|3|üíÇ.1|42|üèá.0|3|üíÇ.1|1|üíÇ.1|üíÇ.1|17|üö©.2|üíÇ.2|15|üè∞|5|üèá.0|25|üíÇ.2|27|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|1|üíÇ.1|4|üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|16|‚õ∞Ô∏è|6|üíÇ.5|11|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|3|üèá.1|8|‚õ∞Ô∏è|17|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|6|üèá.1|9|‚õ∞Ô∏è|18|‚õ∞Ô∏è|12|üèá.0|6|üèá.1|10|üõ£Ô∏è|8|üè∞|18|üè∞|3|üèá.0|5|üèá.1|8|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|",
  "|47|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|48|‚õ∞Ô∏è|30|üíÇ.5|18|‚õ∞Ô∏è|9|üé™.4|üíÇ.4|9|üè∞|üöö.5|7|üö©.5/üé™.5|üíÇ.5|12|üöö.4|5|üèá.4/üõ£Ô∏è|üéâ.4|8|üíÇ.4|üíÇ.4|3|üö©.4|11|‚õ∞Ô∏è|3|üíÇ.5|15|üèá.4|2|‚õ∞Ô∏è|9|üíÇ.4|13|üíÇ.5/üé™.5|1|üöÄ.5|‚õ∞Ô∏è|2|üíÇ.5|4|üê∫.7|14|‚õ∞Ô∏è|3|üèá.6|5|üíÇ.4|13|üéâ.5|üèá.5|üèá.5|‚õ∞Ô∏è|7|üê∫.7|11|üíÇ.4/üé™.4|49|üíÇ.4|8|üöÄ.6|15|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|21|üíÇ.6|üèá.6|7|üöö.6|1|üíÇ.6|8|üè∞|1|üíÇ.7|5|üéâ.7|2|üöÄ.7|7|üê∫.7/üè∞|8|üíÇ.6|üéâ.6|2|üèá.6|4|üè∞|16|üöö.7|11|‚õ∞Ô∏è|2|üê∫.7|13|üèá.6|17|üíÇ.7|10|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|10|üè∞|23|üíÇ.7|4|üíÇ.7|3|üö©.7|24|üö©.6|9|üíÇ.6|32|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|27|üé™.7|15|‚õ∞Ô∏è|19|üíÇ.6|1|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|19|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|4|üíÇ.6|14|üíÇ.6/üé™.6|9|‚õ∞Ô∏è|3|üöÄ.3|13|‚õ∞Ô∏è|1|‚õ∞Ô∏è|5|üíÇ.0|23|üõ£Ô∏è|18|‚õ∞Ô∏è|6|üöÄ.0|52|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üöö.3|1|üö©.3|24|üö©.0|3|üé™.0|1|‚õ∞Ô∏è|10|üèá.3|6|üé™.3|1|üéâ.3|1|üíÇ.3|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üèá.2|14|üíÇ.0|2|‚õ∞Ô∏è|üíÇ.0|15|üèá.3|3|üíÇ.3|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|4|üèá.2|16|üíÇ.0|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|üèá.3|1|üíÇ.3|üíÇ.3|9|‚õ∞Ô∏è|12|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|6|üè∞|3|‚õ∞Ô∏è|11|üéâ.0|1|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|2|üíÇ.3|1|üè∞|8|‚õ∞Ô∏è|8|üöö.0|5|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|3|üèá.3|9|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|üíÇ.0|2|üíÇ.1|üíÇ.1|31|‚õ∞Ô∏è|11|üèá.0|1|üíÇ.0|üíÇ.0|1|üíÇ.1|3|üíÇ.1|42|üèá.0|3|üíÇ.1|1|üíÇ.1|üíÇ.1|18|üíÇ.2|15|üè∞|31|üíÇ.2|27|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|6|üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|2|üíÇ.1|13|‚õ∞Ô∏è|6|üíÇ.5|11|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üé™.1|1|üèá.1|10|‚õ∞Ô∏è|17|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|4|üèá.1|11|‚õ∞Ô∏è|18|‚õ∞Ô∏è|12|üèá.0|4|üèá.1|12|üõ£Ô∏è|8|üè∞|18|üè∞|3|üèá.0|3|üèá.1|10|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|",
  "|47|üè∞|11|‚õ∞Ô∏è|10|üè∞|32|üè∞|4|‚õ∞Ô∏è|48|‚õ∞Ô∏è|49|‚õ∞Ô∏è|9|üíÇ.4/üé™.4|üíÇ.4|9|üè∞|8|üé™.5|üíÇ.5|12|üöö.4|5|üéâ.4/üõ£Ô∏è.4|9|üíÇ.4|4|üö©.4|8|üöö.5|2|‚õ∞Ô∏è|2|üö©.5|üíÇ.5|18|‚õ∞Ô∏è|9|üíÇ.4|13|üíÇ.5/üé™.5|1|üöÄ.5|‚õ∞Ô∏è|2|üíÇ.5|üíÇ.5|3|üê∫.7|10|üèá.4|1|üèá.4|1|‚õ∞Ô∏è|3|üèá.6|5|üíÇ.4|13|üéâ.5|üèá.5|üèá.5|‚õ∞Ô∏è|7|üê∫.7|11|üíÇ.4/üé™.4|50|üíÇ.4|7|üöÄ.6|14|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|üíÇ.7|21|üíÇ.6|üèá.6|5|üöö.6|3|üíÇ.6|8|üè∞|7|üéâ.7|2|üöÄ.7|7|üè∞|8|üíÇ.6|üéâ.6|2|üèá.6|4|üè∞|16|üöö.7|11|‚õ∞Ô∏è|16|üèá.6|17|üíÇ.7|10|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|2|üê∫.7|7|üè∞|6|üö©.6|16|üíÇ.7|17|üê∫.7|25|üíÇ.6|11|üíÇ.7|20|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|27|üé™.7|15|‚õ∞Ô∏è|19|üíÇ.6|1|üíÇ.6|üíÇ.6|6|‚õ∞Ô∏è|5|üöÄ.3|13|‚õ∞Ô∏è|29|‚õ∞Ô∏è|14|üé™.7|4|‚õ∞Ô∏è|4|üíÇ.6|14|üíÇ.6/üé™.6|9|‚õ∞Ô∏è|17|‚õ∞Ô∏è|1|‚õ∞Ô∏è|29|üõ£Ô∏è|18|‚õ∞Ô∏è|5|üíÇ.0|2|üöÄ.0|50|üè∞|51|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|13|üöö.3|1|üö©.3|24|üö©.0|3|üé™.0|1|‚õ∞Ô∏è|12|üèá.3|4|üé™.3|1|üéâ.3|üíÇ.3|üèá.3|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|4|üèá.2|14|üíÇ.0|2|‚õ∞Ô∏è|üíÇ.0|15|üèá.3|3|üíÇ.3|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|4|üèá.2|16|üíÇ.0|üíÇ.0/üõ£Ô∏è.0|20|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|2|üíÇ.3|üíÇ.3|9|‚õ∞Ô∏è|12|‚õ∞Ô∏è|20|‚õ∞Ô∏è|‚õ∞Ô∏è|üèá.3|1|üíÇ.3|6|üè∞|3|‚õ∞Ô∏è|11|üéâ.0|1|‚õ∞Ô∏è|2|üíÇ.1|8|üè∞|8|‚õ∞Ô∏è|2|üíÇ.3|1|üè∞|8|‚õ∞Ô∏è|8|üöö.0|5|‚õ∞Ô∏è|2|üéâ.1/üè∞.1|17|‚õ∞Ô∏è|13|‚õ∞Ô∏è|‚õ∞Ô∏è|12|üíÇ.0|üíÇ.0|2|üíÇ.1|üíÇ.1|31|‚õ∞Ô∏è|13|üíÇ.0|üíÇ.0|1|üíÇ.1|3|üíÇ.1|42|üèá.0|3|üíÇ.1|1|üíÇ.1|19|üíÇ.2|15|üè∞|7|üèá.0|7|üíÇ.1|15|üíÇ.2|27|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|5|üö©.1|8|üíÇ.2|1|üíÇ.2|üíÇ.2|1|üíÇ.2|28|üöÄ.1/üõ£Ô∏è.1|6|üè∞|7|üíÇ.2|1|‚õ∞Ô∏è|18|‚õ∞Ô∏è|13|‚õ∞Ô∏è|16|‚õ∞Ô∏è|6|üíÇ.5|11|‚õ∞Ô∏è|13|‚õ∞Ô∏è|3|üíÇ.1/üé™.1|1|üèá.1|10|‚õ∞Ô∏è|17|‚õ∞Ô∏è|üõ£Ô∏è|‚õ∞Ô∏è|12|‚õ∞Ô∏è|1|üèá.1|14|‚õ∞Ô∏è|18|‚õ∞Ô∏è|12|üèá.0|2|üèá.1|14|üõ£Ô∏è|8|üè∞|18|üè∞|3|üèá.0|3|üèá.1|10|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|",
];

//default game
const game0 =
  "|32|üè∞|6|üé™.0|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|14|üö©.0|4|üé™.0|1|‚õ∞Ô∏è|24|‚õ∞Ô∏è|19|üöö.0|4|üíÇ.0/üõ£Ô∏è.0|17|üèá.0|üèá.0|1|üíÇ.0|üíÇ.0|üéâ.0|üíÇ.0|‚õ∞Ô∏è|17|üèá.0|üèá.0|üíÇ.0|üöÄ.0|üíÇ.0|üíÇ.0|üíÇ.0|‚õ∞Ô∏è|10|üè∞|9|üíÇ.0|3|‚õ∞Ô∏è|2|üè∞|51|üíÇ.1|üíÇ.1|üíÇ.1|üéâ.1|üèá.1|20|üíÇ.1/üè∞.1|üíÇ.1|üíÇ.1|üèá.1|üèá.1|8|üè∞|11|üíÇ.1|üíÇ.1|üíÇ.1|üèá.1|17|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üöö.1|23|üöÄ.1/üõ£Ô∏è.1|6|üö©.1/üè∞.1|17|‚õ∞Ô∏è|24|‚õ∞Ô∏è|24|‚õ∞Ô∏è|36|üé™.1|19|üé™.1|";

//Pump House
const game1 =
  "|32|üè∞|6|üé™.0|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|19|üé™.0|1|‚õ∞Ô∏è|24|‚õ∞Ô∏è|üíÇ.0|23|üíÇ.0/üõ£Ô∏è.0|üéâ.0|23|‚õ∞Ô∏è|üö©.0|üíÇ.0|16|üöö.0|üèá.0|üèá.0|üíÇ.0|1|üíÇ.0|‚õ∞Ô∏è|10|üè∞|8|üèá.0|üöÄ.0|1|üíÇ.0|1|‚õ∞Ô∏è|2|üè∞|16|üèá.0|1|üíÇ.0|üíÇ.0|üíÇ.0|55|üè∞|12|üè∞|17|üèá.1|üèá.1|üèá.1|12|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.1|üéâ.1|üíÇ.1|üíÇ.1|üöÄ.1|üèá.1|üöö.1|17|üíÇ.1/üõ£Ô∏è.1|1|üö©.1|üíÇ.1|üíÇ.1|üíÇ.1|1|üíÇ.1/üè∞.1|17|‚õ∞Ô∏è|4|üíÇ.1|19|‚õ∞Ô∏è|24|‚õ∞Ô∏è|36|üé™.1|19|üé™.1|";
//Rio de Janeiro
const game2 =
  "|32|üè∞|6|üé™.0|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|19|üé™.0|1|‚õ∞Ô∏è|24|‚õ∞Ô∏è|21|üèá.0|üöö.0|üíÇ.0|üíÇ.0/üõ£Ô∏è.0|20|üöÄ.0|üèá.0|üíÇ.0|1|‚õ∞Ô∏è|9|üíÇ.0|üö©.0|üèá.0|12|‚õ∞Ô∏è|2|üíÇ.0|üíÇ.0|5|üíÇ.0|üéâ.0/üè∞.0|üèá.0|12|‚õ∞Ô∏è|2|üíÇ.0/üè∞.0|üíÇ.0|74|üíÇ.1|üíÇ.1/üè∞.1|5|üíÇ.1|üíÇ.1|üöÄ.1|üèá.1|3|üíÇ.1/üè∞.1|üíÇ.1|üéâ.1|10|üíÇ.1|5|üíÇ.1|1|üèá.1|3|üèá.1|üèá.1|6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|11|üöö.1|12|üíÇ.1/üõ£Ô∏è.1|1|üö©.1|4|üè∞|17|‚õ∞Ô∏è|24|‚õ∞Ô∏è|24|‚õ∞Ô∏è|36|üé™.1|19|üé™.1|";
//1800 Marengo campaign
const game3 =
  "|32|üè∞|6|üé™.0|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|19|üé™.0|1|‚õ∞Ô∏è|24|‚õ∞Ô∏è|20|üö©.0|3|üíÇ.0/üõ£Ô∏è.0|8|üöö.0|15|‚õ∞Ô∏è|17|üèá.0|üèá.0|üéâ.0|üíÇ.0|3|‚õ∞Ô∏è|10|üöÄ.0/üè∞.0|üíÇ.0|üèá.0|üèá.0|4|üíÇ.0|üíÇ.0|üíÇ.0|3|‚õ∞Ô∏è|2|üè∞|6|üíÇ.0|üíÇ.0|üíÇ.0|67|üíÇ.1/üè∞.1|12|üíÇ.1/üè∞.1|üíÇ.1|24|üéâ.1|6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|üíÇ.1|15|üíÇ.1|7|üõ£Ô∏è|1|üö©.1|4|üíÇ.1/üè∞.1|8|üöö.1|8|‚õ∞Ô∏è|24|‚õ∞Ô∏è|19|üíÇ.1|üíÇ.1|3|‚õ∞Ô∏è|18|üèá.1|üèá.1|üíÇ.1|15|üé™.1|6|üèá.1|üöÄ.1|üèá.1|10|üé™.1|";
//1805 battle of Austerlitz
const game4 =
  "|32|üè∞|6|üé™.0|19|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|19|üé™.0|1|‚õ∞Ô∏è|24|‚õ∞Ô∏è|24|üõ£Ô∏è|20|üèá.0|1|üöö.0|1|‚õ∞Ô∏è|21|üíÇ.0|2|‚õ∞Ô∏è|10|üö©.0/üè∞|üíÇ.0|8|üíÇ.0|1|üéâ.0|1|‚õ∞Ô∏è|2|üíÇ.0/üè∞.0|üíÇ.0|6|üíÇ.0|üíÇ.0|üèá.0|üöÄ.0|21|üíÇ.0|üíÇ.0|üèá.0|üèá.0|40|üéâ.1/üè∞.1|12|üíÇ.1/üè∞.1|üíÇ.1|9|üíÇ.1|1|üíÇ.1|12|üèá.1|6|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|‚õ∞Ô∏è|7|üíÇ.1|3|üö©.1|4|üöö.1|2|üíÇ.1|üíÇ.1|3|üõ£Ô∏è|6|üíÇ.1/üè∞.1|11|üöÄ.1|üèá.1|üíÇ.1|3|‚õ∞Ô∏è|19|üèá.1|üèá.1|3|‚õ∞Ô∏è|24|‚õ∞Ô∏è|36|üé™.1|19|üé™.1|";
export const gameList = [
  { name: "Default", data: game0 },
  { name: "Pump House", data: game1 },
  { name: "Rio de Janeiro", data: game2 },
  { name: "1800 Marengo campaign", data: game3 },
  { name: "1805 battle of Austerlitz", data: game4 },
];

//update game
function update(G: GameState, ctx: Ctx) {
  const cPlayer = ctx.currentPlayer as P_ID;
  //check supply
  updateSuppliedCells(G, cPlayer);
  updateSuppliedCells(G, dualPlayerID(cPlayer));
  //check update of the stronghold
  G.places.forEach((strong, CId) => {
    if (!strong) {
    } else if (strong.placeType === "Mountain") {
    }
    //if on arsenals,
    else if (strong.placeType === "Arsenal" && strong.belong) {
      const obj = G.cells[CId];
      // obj is a enemy, and have offense, and is supplied , check in update
      if (
        obj &&
        obj.belong !== strong.belong &&
        obj.offense > 0 &&
        obj.supplied
      ) {
        G.attackRecords[cPlayer] = [CId, "Arsenal"];

        G.places[CId] = null;
        //then add 1 atk action
      }
    } else {
      const obj = G.cells[CId];
      if (obj && obj.canAddDef) {
        strong.belong = obj.belong;
      } else {
        strong.belong = null;
      }
    }
  });
  //updateControlArea(G);
}

function updateSuppliedCells(G: GameState, player?: P_ID) {
  G.players.forEach((player) => {
    const SuppliedCells = getSuppliedCells(G, player.id);
    G.inSupply[player.id] = SuppliedCells;
  });
  /*
  if (player !== "1") {
    const SuppliedCells0 = getSuppliedCells(G, "0");
    G.inSupply[0] = SuppliedCells0;
  }


  if (player !== "0") {
    const SuppliedCells1 = getSuppliedCells(G, "1");

    G.inSupply[1] = SuppliedCells1;
  }
  

  if (player !== "2") {
    const SuppliedCells2 = getSuppliedCells(G, "2");

    G.inSupply[2] = SuppliedCells2;
  }*/

  updateSuppliedObj(G);
}
function updateSuppliedObj(G: GameState) {
  G.cells = G.cells.map((obj, id) => {
    if (obj) {
      return { ...obj, supplied: G.inSupply[obj.belong].includes(id) };
    } else {
      return null;
    }
  });
}
/*
function updateControlArea(G: GameState) {
  const oldArea = G.controlArea;
  G.controlArea = oldArea.map((area, CId) => {
    const relDef0 = getRelDef(G, CId, "0");
    const relDef1 = getRelDef(G, CId, "1");
    const relDef2 = getRelDef(G, CId, "2");
    const relDef3 = getRelDef(G, CId, "3");
    const relDef4 = getRelDef(G, CId, "4");
    const relDef5 = getRelDef(G, CId, "5");
    const relDef6 = getRelDef(G, CId, "6");
    const relDef7 = getRelDef(G, CId, "7");
    let newControl = area.control;
    if (relDef0 > relDef1) {
      newControl = "0";
    }
    if (relDef1 > relDef0) {
      newControl = "1";
    }
    const obj = G.cells[CId];
    if (obj) {
      newControl = obj.belong;
    }
    return {
      control: newControl,
      "0": relDef0,
      "1": relDef1,
      "2": relDef2,
      "3": relDef3,
      "4": relDef4,
      "5": relDef5,
      "6": relDef6,
      "7": relDef7,
    };
  });
}
*/

// Position and distance functions

export interface Position {
  x: number;
  y: number;
}

interface Size {
  readonly mx: number;
  readonly my: number;
}
export const BoardSize: Size = { mx: 50, my: 40 };

export function Pos2CId(x: number, y: number): CellID {
  if (x < 0 || y < 0 || x >= BoardSize.mx || y >= BoardSize.my) {
    return -1;
  } else {
    return y * BoardSize.mx + x;
  }
}

export function CId2Pos(id: CellID): Position {
  const ox = id % BoardSize.mx;
  const oy = Math.floor(id / BoardSize.mx);
  return { x: ox, y: oy };
}

function NaiveDistance(p1: Position, p2: Position): number {
  return Math.max(Math.abs(p1.x - p2.x), Math.abs(p1.y - p2.y));
}

export function ptSetDisLessThan(
  set: CellID[],
  pt: CellID,
  dis: number = 1
): boolean {
  if (set && set.length > 0) {
    return set.some((CId) => NaiveDistance(CId2Pos(pt), CId2Pos(CId)) <= dis);
  } else return false;
}

function connectedComponents(set: CellID[], pts: CellID[]): CellID[] {
  //use CId
  let oldSet = pts;
  let newSet: CellID[] = [];

  do {
    //new pts are not in old, and distance is less than 1
    newSet = set.filter(
      (CId) => !oldSet.includes(CId) && ptSetDisLessThan(oldSet, CId)
    );
    oldSet = oldSet.concat(newSet);
  } while (newSet.length > 0);
  return oldSet;
}

// useful function
export function nonNull<T>(a: T) {
  return a !== null;
}

export function removeDup<T>(a: Array<T>) {
  return Array.from(new Set(a));
}

export function filterCId<T>(
  a: (T | null)[],
  filter: (b: T, c: CellID) => boolean
): CellID[] {
  return a
    .map((obj, id) => (obj && filter(obj, id) ? id : null))
    .filter(nonNull) as CellID[];
}

export function canPick(G: GameState, ctx: Ctx, CId: CellID) {
  const cPlayer = ctx.currentPlayer as P_ID;
  const moveEdRec = G.moveRecords[cPlayer].map((p) => p[1]);
  const retreatSt = G.forcedRetreat[cPlayer][0];

  //according the record, not yet attack, each piece has most 1 move, totally 5 moves
  if (
    G.attackRecords[cPlayer] !== null ||
    moveEdRec.length >= 5 ||
    moveEdRec.includes(CId)
  ) {
    return false;
  }
  //if there is a retreat
  else if (retreatSt !== null) {
    return CId === retreatSt;
  } else {
    let obj = G.cells[CId];
    //obj belongs to player, and must be supplied, except relays
    return (
      obj !== null &&
      obj.belong === cPlayer &&
      (obj.supplied || obj.objType === "Relay")
    );
  }
}
export function canPut(G: GameState, ctx: Ctx, stCId: CellID, edCId: CellID) {
  const obj = G.cells[stCId];
  //check obj is on stCells,  in move range
  return obj !== null && moveRange(G, stCId, obj.speed).includes(edCId);
}
function moveRange(G: GameState, stCId: CellID, speed: number = 1): CellID[] {
  const reachableSquares = [];

  if (speed === 0) {
    reachableSquares.push(stCId);
  }

  if (speed === 1) {
    reachableSquares.push(
      ...[
        stCId - 51,
        stCId - 50,
        stCId - 49,
        stCId - 1,
        stCId,
        stCId + 1,
        stCId + 49,
        stCId + 50,
        stCId + 51,
      ]
    );
  }

  if (speed === 2) {
    reachableSquares.push(
      ...[
        stCId - 102,
        stCId - 101,
        stCId - 100,
        stCId - 99,
        stCId - 98,
        stCId - 52,
        stCId - 51,
        stCId - 50,
        stCId - 49,
        stCId - 48,
        stCId - 2,
        stCId - 1,
        stCId,
        stCId + 1,
        stCId + 2,
        stCId + 48,
        stCId + 49,
        stCId + 50,
        stCId + 51,
        stCId + 52,
        stCId + 98,
        stCId + 99,
        stCId + 100,
        stCId + 101,
        stCId + 102,
      ]
    );
  }

  const possibleMove = reachableSquares.filter((cell) => cell >= 0);

  return possibleMove
    .map((id) => {
      if (G.cells[id] === null && G.places[id]?.placeType !== "Mountain")
        return id;
      else return null;
    })
    .filter(nonNull) as CellID[];
}

export function canAttack(
  G: GameState,
  ctx: Ctx,
  CId: CellID
): [boolean, number] {
  const cPlayer = ctx.currentPlayer as P_ID;
  const obj = G.cells[CId];
  const retreatSt = G.forcedRetreat[cPlayer][0];

  //if there is no retreat one haven't attacked and obj is enemy
  if (
    retreatSt === null &&
    G.attackRecords[cPlayer] === null &&
    obj &&
    obj.belong !== cPlayer &&
    !G.alliances[cPlayer].includes(obj.belong)
  ) {
    const enemy = obj.belong;
    const off = getBattleFactor(G, cPlayer, true, CId)[0];
    const def = getBattleFactor(G, enemy, false, CId)[0];
    const relOff = off - def;
    return [relOff > 0, relOff];
  } else {
    return [false, 0];
  }
}
//search in Á±≥ shape
function searchInMiShape(
  G: GameState,
  CId: CellID,
  filter: (obj: ObjInstance | null, id: CellID) => boolean,
  min: number = 0,
  max: number = Math.max(BoardSize.mx, BoardSize.my)
): [CellID[][], Position[][]] {
  const pos = CId2Pos(CId);
  const aCIdRowsLst: CellID[][] = [];
  const rowsLst: Position[][] = [];
  //search for 8 direction
  for (let i = -1; i <= 1; i++) {
    for (let j = -1; j <= 1; j++) {
      if (i !== 0 || j !== 0) {
        let relPosLine: Position[] = [];
        let aCIdLine: CellID[] = [];
        //check on 1 direction, distance from min to max
        for (let n = min; n <= max; n++) {
          //get the cells on direction
          let cx = pos.x + n * i;
          let cy = pos.y + n * j;
          let cCId = Pos2CId(cx, cy);
          let cObj = G.cells[cCId];
          //!!!filter here
          //and also filter the case that is out of board
          if (cCId !== -1 && cObj !== undefined && filter(cObj, cCId)) {
            relPosLine.push({ x: n * i, y: n * j });
            aCIdLine.push(cCId);
          } else {
            break;
          }
        }
        if (relPosLine.length !== 0) {
          rowsLst.push(relPosLine);
          aCIdRowsLst.push(aCIdLine);
        }
      }
    }
  }
  return [aCIdRowsLst, rowsLst];
}

//battle value
// get charged cavalry rows with relative positions.
export function getChargedCavalries(
  G: GameState,
  CId: CellID,
  player: P_ID | null
): Position[][] {
  const obj = G.cells[CId];
  const placesType = G.places[CId]?.placeType;

  //the target not in a stronghold, and has piece on it
  if (placesType === "Fortress" || placesType === "Pass" || !obj) {
    return [];
  } else {
    const chargeRowsLst = searchInMiShape(
      G,
      CId,
      (cObj, cCId) =>
        //check cObj is a cavalry, a enemy, supplied, not retreating, not in a fortress
        cObj !== null &&
        cObj.objType === "Cavalry" &&
        (cObj.belong === player || (!player && obj.belong !== cObj.belong)) &&
        cObj.supplied &&
        !cObj.retreating &&
        G.places[cCId]?.placeType !== "Fortress",
      1,
      4
    )[1];
    return chargeRowsLst;
  }
}

export function fireRange(G: GameState, CId: CellID, range: number): CellID[] {
  return removeDup(
    searchInMiShape(
      G,
      CId,
      (obj, id) => G.places[id]?.placeType !== "Mountain",
      0,
      range
    )[0].flat()
  );
}
function getRelDef(G: GameState, CId: CellID, belong: P_ID) {
  return (
    getBattleFactor(G, belong, false, CId)[0] -
    getBattleFactor(G, dualPlayerID(belong), true, CId)[0]
  );
}
export function getBattleFactor(
  G: GameState,
  player: P_ID,
  isOffense: boolean,
  CId: CellID
): [number, CellID[]] {
  //type: true->offense, false->defense
  const pos = CId2Pos(CId);
  const targetObj = G.cells[CId];
  // filter the unit in Á±≥ shape in its range
  // first filter Out the mountain block,
  let effectingObjs = fireRange(G, CId, 3).filter((id) => {
    let obj = G.cells[id];
    //obj is in range, supplied, belongs to the chosen player,
    return (
      obj &&
      NaiveDistance(pos, CId2Pos(id)) <= obj.range &&
      obj.supplied &&
      obj.belong === player &&
      //filter out retreating units in offense
      !(isOffense && (obj.retreating || obj.offense === 0))
    );
  });

  //filter the effecting strongholds
  const effectingStronghold = effectingObjs
    .map((id) => {
      const obj = G.cells[id];
      const strong = G.places[id];
      return strong && strong.defenseAdd > 0 && obj && obj.canAddDef
        ? strong
        : null;
    })
    .filter((obj) => obj) as Stronghold[];
  const strongholdDef = effectingStronghold
    .map((obj) => obj.defenseAdd)
    .reduce((a, b) => a + b, 0);

  //get charged cavalries
  const chargedCavalries = getChargedCavalries(G, CId, player)
    .flat()
    .map((rPos) => {
      let aCId = Pos2CId(pos.x + rPos.x, pos.y + rPos.y);
      return aCId;
    });
  const chargedAmount = chargedCavalries.length;

  let addValue = 0;
  //if it is offensive, merge objs in range and in charge
  if (targetObj && targetObj.belong !== player && isOffense) {
    // add and merge cavalries
    effectingObjs = Array.from(
      new Set([...effectingObjs, ...chargedCavalries])
    );

    // add charge value
    addValue = 3 * chargedAmount;
  } else if (!isOffense) {
    addValue = strongholdDef;
  }

  return [
    effectingObjs
      .map((id) => G.cells[id] as ObjInstance)
      .map((obj) => (isOffense ? obj.offense : obj.defense))
      .reduce((a, b) => a + b, addValue),
    effectingObjs,
  ];
}

//Supply

export function dirSupplyFrom(G: GameState, CId: CellID, player: P_ID) {
  let result = searchInMiShape(
    G,
    CId,
    (obj, id) =>
      //filter the objs block the supply lines
      //obj is enemy, has offense factor, is supplied, not retreat
      //and mountains also block
      !(
        obj &&
        obj.belong !== player &&
        !G.alliances[player].includes(obj.belong) &&
        obj.offense > 0 &&
        obj.supplied
      ) && G.places[id]?.placeType !== "Mountain"
  );
  return result[0];
}

export function getDirSuppliedLines(
  G: GameState,
  player: P_ID
): [CellID[], CellID[][][]] {
  //get arsenals CId and relays CId
  const arsenalLst = filterCId(
    G.places,
    (str) =>
      (str.belong === player ||
        G.alliances[player].includes(str.belong as P_ID)) &&
      str.placeType === "Arsenal"
  );
  const relayLst = filterCId(
    G.cells,
    (obj) =>
      (obj.belong === player || G.alliances[player].includes(obj.belong)) &&
      obj.objType === "Relay"
  );
  // get direct supply lines
  let dirSuppliedLines = arsenalLst.map((aId) => dirSupplyFrom(G, aId, player));
  let dirSupplied = dirSuppliedLines.flat(2);
  let dirRelayLst = [];
  //if relay is on direct, then add more supply lines, iterate as many times as relay units on has
  const relayLimit = 4; //how many times supply can be relayed
  for (let i = 0; i < relayLimit; i++) {
    dirRelayLst = relayLst.filter((rId) => dirSupplied.includes(rId));
    dirSuppliedLines = dirSuppliedLines.concat(
      dirRelayLst.map((rId) => dirSupplyFrom(G, rId, player))
    );
    dirSupplied = dirSuppliedLines.flat(2);
  }

  return [removeDup(dirSupplied), dirSuppliedLines];
}

export function getSuppliedCells(G: GameState, player: P_ID): CellID[] {
  const dirSupplied = getDirSuppliedLines(G, player)[0];
  //get the connected component of supplied pieces
  const myPieceLst = filterCId(G.cells, (obj) => obj.belong === player);
  const myPieceDirSupplied = myPieceLst.filter((id) =>
    dirSupplied.includes(id)
  );

  const mySuppliedPieces = connectedComponents(myPieceLst, myPieceDirSupplied);
  return mySuppliedPieces;
}

//Game Object

type ObjType =
  | "Infantry"
  | "Cavalry"
  | "Cavalry_Wolf"
  | "Artillery"
  | "Swift_Artillery"
  | "Relay"
  | "Swift_Relay";

export const objTypeList: readonly ObjType[] = [
  "Infantry",
  "Cavalry",
  "Cavalry_Wolf",
  "Artillery",
  "Swift_Artillery",
  "Relay",
  "Swift_Relay",
];
interface ObjData {
  readonly typeName: ObjType;
  readonly objType: ObjType; // functional type
  readonly objRender: string; //emoji
  readonly speed: number;
  readonly range: number;
  readonly offense: number;
  readonly defense: number;
  readonly canAddDef: boolean;
}
export interface ObjInstance extends ObjData {
  belong: P_ID;
  supplied: boolean;
  retreating: boolean;
}

type Type2ObjData = {
  [Key in ObjType]: ObjData;
};
export const objDataList: Type2ObjData = {
  Infantry: {
    typeName: "Infantry",
    objType: "Infantry",
    objRender: "üíÇ",
    speed: 1,
    range: 2,
    offense: 4,
    defense: 6,
    canAddDef: true,
  },
  Cavalry: {
    typeName: "Cavalry",
    objType: "Cavalry",
    objRender: "üèá",
    speed: 2,
    range: 2,
    offense: 4,
    defense: 5,
    canAddDef: false,
  },
  Cavalry_Wolf: {
    typeName: "Cavalry_Wolf",
    objType: "Cavalry",
    objRender: "üê∫",
    speed: 2,
    range: 2,
    offense: 4,
    defense: 5,
    canAddDef: false,
  },
  Artillery: {
    typeName: "Artillery",
    objType: "Artillery",
    objRender: "üéâ",
    speed: 1,
    range: 3,
    offense: 5,
    defense: 8,
    canAddDef: true,
  },
  Swift_Artillery: {
    typeName: "Swift_Artillery",
    objType: "Artillery",
    objRender: "üöÄ",
    speed: 2,
    range: 3,
    offense: 5,
    defense: 8,
    canAddDef: true,
  },
  Relay: {
    typeName: "Relay",
    objType: "Relay",
    objRender: "üö©",
    speed: 1,
    range: 0,
    offense: 0,
    defense: 1,
    canAddDef: false,
  },
  Swift_Relay: {
    typeName: "Swift_Relay",
    objType: "Relay",
    objRender: "üöö",
    speed: 2,
    range: 0,
    offense: 0,
    defense: 1,
    canAddDef: false,
  },
};

export function newPiece(type: ObjType, be: P_ID): ObjInstance {
  const objData = objDataList[type];
  return {
    ...objData,
    belong: be,
    supplied: true,
    retreating: false,
  };
}

type StrongholdType = "Arsenal" | "Fortress" | "Pass" | "Mountain";
export const strongholdTypeList: readonly StrongholdType[] = [
  "Arsenal",
  "Fortress",
  "Pass",
  "Mountain",
];
interface Stronghold {
  readonly placeType: StrongholdType;
  readonly defenseAdd: number;
  readonly placeRender: string;
  belong: P_ID | null;
}

export function newStronghold(
  type: StrongholdType,
  belong: P_ID | null = null
): Stronghold {
  return {
    placeType: type,
    defenseAdd: renderPlaceByType(type)[1],
    placeRender: renderPlaceByType(type)[0],
    belong: belong,
  };
}
export function renderPlaceByType(t: StrongholdType): [string, number] {
  switch (
    t //render and def Add
  ) {
    case "Arsenal":
      return ["üé™", 0];
    case "Pass":
      return ["üõ£Ô∏è", 2];
    case "Fortress":
      return ["üè∞", 4];
    case "Mountain":
      return ["‚õ∞Ô∏è", 0];
  }
}
